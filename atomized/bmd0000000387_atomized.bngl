###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL1109270003', 'http://identifiers.org/biomodels.db/BIOMD0000000387']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/22001849']
#@BQB_ENCODES:['http://identifiers.org/obo.go/GO:0019253']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/33090']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is an atomized translation of an SBML model created on 12/08/2021. The original model has 7 molecules and 4 reactions. The translated model has 6 molecules and 10 rules'
###
begin model
begin parameters
	Rp 3.2
	Nt 0.5
	alpha 0.24
	Jmax 142.047003854271
	Q 1000.0
	Vcmax 1.91141270310584
	Kc 26.7125313821435
	Ko 187891.032274486
	TPU 0.259027750094988
	a 0.0434
	starch 3.011e+20 #original 0.5/L
end parameters
begin molecule types
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:16710
	RuBP()
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:16526
	CO2()
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:25523
	NADP()
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:17050
	PGA()
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:15379
	O2()
	#^ bqbiol:isVersionOf obo.chebi:CHEBI:16474
	NADPH()
end molecule types
begin seed species
	$RuBP() 1.2044e+21 # (2.0 * 0.001)mol/L * 6.022e23/mol *1.0L #RuBP #RuBP
	PGA() 1.44528e+21 #original 2.4/L #PGA #PGA
	NADPH() 1.2646200000000002e+20 #original 0.21/L #NADPH #NADPH
	$CO2() 1.4753900000000002e+22 #original 24.5/L #CO2 #CO2
	$O2() 1.26462e+25 #original 21000.0/L #O2 #O2
	NADP() -1.26462e+20 #original 0.29/L #NADP #NADP
end seed species
begin observables
	Species RuBP RuBP() #RuBP
	Species PGA PGA() #PGA
	Species NADPH NADPH() #NADPH
	Species CO2 CO2() #CO2
	Species O2 O2() #O2
	Species NADP NADP() #NADP
end observables
begin functions
	Gamma() = O2/(2*exp(7.80274855657896))
	Cst() = exp(-0.0398*a*starch)
	J() = 0.0276923076923077*Cst*Q*alpha/sqrt(1 + 0.81*Q^2*alpha^2/Jmax^2)
	Vj() = CO2*J/(4*CO2 + 8*Gamma)
	Vp() = 3*TPU/(1 - Gamma/CO2)
	NADP_ar() = -NADPH + Nt
	Vc() = CO2*Vcmax/((1 + O2/Ko)*(CO2 + Kc))
	phi() = 0.21*Kc*O2/(CO2*Ko)
	fRate0() = Vc/4 + Vj/4 + Vp/2 - abs(Vc - Vj)/4 - abs(Vc/2 + Vj/2 - Vp - abs(Vc - Vj)/2)/2
	fRate1() = phi*(Vc/2 + Vj/2 + Vp - abs(Vc - Vj)/2 - abs(Vc/2 + Vj/2 - Vp - abs(Vc - Vj)/2))/2
	fRate2() = NADPH*Vcmax/(Nt*Rp)
	fRate3() = 0.5*J/Nt
end functions
begin reaction rules
	PGA_prod_Vc_reactants_0: 0  -> RuBP() -1*(fRate0()) #Modifiers(O2)
	PGA_prod_Vc_reactants_1: 0  -> CO2() -1*(fRate0()) #Modifiers(O2)
	PGA_prod_Vc_reactants_2: 0  -> NADPH() -1*2.0*(fRate0()) #Modifiers(O2)
	PGA_prod_Vc_products_0: 0  -> PGA() 2.0*fRate0() #Modifiers(O2)
	PGA_prod_Vo_reactants_0: 0  -> RuBP() -1*(fRate1()) #Modifiers(CO2)
	PGA_prod_Vo_reactants_1: 0  -> O2() -1*(fRate1()) #Modifiers(CO2)
	PGA_prod_Vo_reactants_2: 0  -> NADPH() -1*2.0*(fRate1()) #Modifiers(CO2)
	PGA_prod_Vo_products_0: 0  -> PGA() fRate1() #Modifiers(CO2)
	PGA_cons: PGA() -> RuBP() fRate2() #Modifiers(NADPH)
	NADPH_prod: NADP() -> NADPH() fRate3()
end reaction rules
end model
