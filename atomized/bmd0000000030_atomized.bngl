###
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000030', 'http://identifiers.org/biomodels.db/MODEL6618676537']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/14744999']
#@BQB_IS_VERSION_OF:['http://identifiers.org/obo.go/GO:0000165']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/8355']
#@creatorEmail:'lenov@ebi.ac.uk'
#@creatorName:'Le Nov√®re Nicolas'
#@notes:'This is an atomized translation of an SBML model created on 12/08/2021. The original model has 18 molecules and 20 reactions. The translated model has 8 molecules and 20 rules'
###
begin model
begin parameters
	k1 0.02
	k_1 1.0
	k2 0.01
	k3 0.032
	k_3 1.0
	k4 15.0
	k5 0.02
	k_5 1.0
	k6 0.01
	k7 0.032
	k_7 1.0
	k8 15.0
	h1 0.045
	h_1 1.0
	h2 0.092
	h3 1.0
	h_3 0.01
	h4 0.01
	h_4 1.0
	h5 0.5
	h6 0.086
	h_6 0.0011
	h7 0.01
	h_7 1.0
	h8 0.47
	h9 0.14
	h_9 0.0018
	h10 0.045
	h_10 1.0
	h11 0.092
	h12 1.0
	h_12 0.01
end parameters
begin molecule types
	MAPK_PT_MKP_T()
	#^ bqbiol:is uniprot:Q90W58
	MKP(mapk)
	#^ bqbiol:is uniprot:Q05116
	MAPKK(mapk)
	MAPK_MAPKK_T()
	MAPK_PY_MKP_T()
	#^ bqbiol:isVersionOf uniprot:P26696
	MAPK(_pp~_PP~0,_pt~_PT~0,_py~_PY~0,mapkk,mkp)
	MAPK_PP_MKP_Y()
	MAPK_MKP_Y()
end molecule types
begin seed species
	MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) 4.8176000000000006e+17 # (800.0 * 1e-09)mol/L * 6.022e23/mol *1.0L #MAPK #M
	MAPKK(mapk) 1.0839600000000002e+17 #original 180.0nanomole (default)/L  #MAPKK #MAPKK
	MKP(mapk) 6.022000000000001e+16 #original 100.0nanomole (default)/L  #MKP #MKP
end seed species
begin observables
	Species MAPK MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) #MAPK
	Species MAPK_PY MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp) #MAPK-PY
	Species MAPK_PT MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp) #MAPK-PT
	Species MAPK_PP MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp) #MAPK-PP
	Species MAPKK MAPKK(mapk) #MAPKK
	Species MKP MKP(mapk) #MKP
	Species MAPK_PY_MAPKK MAPK(_pp~0,_pt~0,_py~_PY,mapkk!41,mkp).MAPKK(mapk!41) #MAPK-PY_MAPKK
	Species MAPK_PT_MAPKK MAPK(_pp~0,_pt~_PT,_py~0,mapkk!41,mkp).MAPKK(mapk!41) #MAPK-PT_MAPKK
	Species MAPK_MAPKK_Y MAPK(_pp~0,_pt~0,_py~0,mapkk!41,mkp).MAPKK(mapk!41) #MAPK_MAPKK_Y
	Species MAPK_MAPKK_T MAPK_MAPKK_T() #MAPK_MAPKK_T
	Species MAPK_PP_MKP_T MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) #MAPK-PP_MKP_T
	Species MAPK_PP_MKP_Y MAPK_PP_MKP_Y() #MAPK-PP_MKP_Y
	Species MAPK_PY_MKP_Y MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp!40).MKP(mapk!40) #MAPK-PY_MKP_Y
	Species MAPK_PY_MKP_T MAPK_PY_MKP_T() #MAPK-PY_MKP_T
	Species MAPK_PT_MKP_Y MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp!40).MKP(mapk!40) #MAPK-PT_MKP_Y
	Species MAPK_PT_MKP_T MAPK_PT_MKP_T() #MAPK-PT_MKP_T
	Species MAPK_MKP_T MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) #MAPK_MKP_T
	Species MAPK_MKP_Y MAPK_MKP_Y() #MAPK_MKP_Y
end observables
begin reaction rules
	reaction_0000001: MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) + MAPKK(mapk) <-> MAPK(_pp~0,_pt~0,_py~0,mapkk!41,mkp).MAPKK(mapk!41) k1,k_1
	reaction_0000002: MAPK(_pp~0,_pt~0,_py~0,mapkk!41,mkp).MAPKK(mapk!41) -> MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp) + MAPKK(mapk) k2
	reaction_0000003: MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp) + MAPKK(mapk) <-> MAPK(_pp~0,_pt~0,_py~_PY,mapkk!41,mkp).MAPKK(mapk!41) k3,k_3
	reaction_0000004: MAPK(_pp~0,_pt~0,_py~_PY,mapkk!41,mkp).MAPKK(mapk!41) -> MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp) + MAPKK(mapk) k4
	reaction_0000005: MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) + MAPKK(mapk) <-> MAPK_MAPKK_T() k5,k_5
	reaction_0000006: MAPK_MAPKK_T() -> MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp) + MAPKK(mapk) k6
	reaction_0000007: MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp) + MAPKK(mapk) <-> MAPK(_pp~0,_pt~_PT,_py~0,mapkk!41,mkp).MAPKK(mapk!41) k7,k_7
	reaction_0000008: MAPK(_pp~0,_pt~_PT,_py~0,mapkk!41,mkp).MAPKK(mapk!41) -> MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp) + MAPKK(mapk) k8
	reaction_0000009: MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp) + MKP(mapk) <-> MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) h1,h_1
	reaction_0000010: MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) -> MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp!40).MKP(mapk!40) h2
	reaction_0000011: MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp!40).MKP(mapk!40) <-> MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp) + MKP(mapk) h3,h_3
	reaction_0000013: MAPK(_pp~0,_pt~_PT,_py~0,mapkk,mkp) + MKP(mapk) <-> MAPK_PT_MKP_T() h4,h_4
	reaction_0000012: MAPK_PT_MKP_T() -> MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) h5
	reaction_0000015: MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp!40).MKP(mapk!40) <-> MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) + MKP(mapk) h6,h_6
	reaction_0000017: MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp) + MKP(mapk) <-> MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp!40).MKP(mapk!40) h7,h_7
	reaction_0000014: MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp!40).MKP(mapk!40) -> MAPK_MKP_Y() h8
	reaction_0000019: MAPK_MKP_Y() <-> MAPK(_pp~0,_pt~0,_py~0,mapkk,mkp) + MKP(mapk) h9,h_9
	reaction_0000020: MAPK(_pp~_PP,_pt~0,_py~0,mapkk,mkp) + MKP(mapk) <-> MAPK_PP_MKP_Y() h10,h_10
	reaction_0000021: MAPK_PP_MKP_Y() -> MAPK_PY_MKP_T() h11
	reaction_0000022: MAPK_PY_MKP_T() <-> MAPK(_pp~0,_pt~0,_py~_PY,mapkk,mkp) + MKP(mapk) h12,h_12
end reaction rules
end model
