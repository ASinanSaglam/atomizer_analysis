###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL1304190001', 'http://identifiers.org/biomodels.db/BIOMD0000000642']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/23365616']
#@BQB_HAS_PROPERTY:['http://identifiers.org/mamo/MAMO_0000046', 'http://identifiers.org/go/GO:0043627', 'urn:miriam:doid:DOID%3A+0060075']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/9606']
#@creatorEmail:'efairbanks@ebi.ac.uk'
#@creatorName:'Fairbanks Emma Louise'
#@notes:'This is an atomized translation of an SBML model created on 13/08/2021. The original model has 4 molecules and 0 reactions. The translated model has 3 molecules and 3 rules'
###
begin model
begin parameters
	alpha1 0.7
	alpha2 0.98
	beta1 0.3
	beta2 0.4
	delta1 1.0
	gamma2 0.9
	s 0.4
	rho 0.2
	omega 0.3
	mu 0.29
	alpha3 1.0
	gamma3 0.085
	sigma1 1.2
	sigma2 0.94
	sigma3 0.3
	v 0.4
	theta 0.8
	pi 0
	estrogen 3.010999999999994e+23 #original 0.499999999999999mol/L
end parameters
begin molecule types
	Tumourcells()
	normalcells()
	Immunecells()
end molecule types
begin seed species
	normalcells() 6.021999999999988e+23 # 0.999999999999998mol/L * 6.022e23/mol *1.0L #normalcells #H
	Tumourcells() 6.021999999999989e+18 #original 9.99999999999998e-06mol/L  #Tumourcells #T
	Immunecells() 8.30620689759e+23 #original 1.379310345mol/L  #Immunecells #I
end seed species
begin observables
	Species normalcells normalcells() #normal cells
	Species Tumourcells Tumourcells() #Tumour cells
	Species Immunecells Immunecells() #Immune cells
end observables
begin functions
	arRateI() = -Immunecells*Tumourcells*gamma3 + Immunecells*Tumourcells*rho/(Tumourcells + omega) - Immunecells*estrogen*sigma3/(estrogen + v) - Immunecells*mu + s
	arRateT() = -Immunecells*Tumourcells*gamma2 + Tumourcells*(-Tumourcells*beta2 + alpha3) + estrogen*normalcells*sigma2
	arRateH() = -estrogen*normalcells*sigma1 + normalcells*(-Tumourcells*delta1 + alpha1 - beta1*normalcells)
end functions
begin reaction rules
	0  -> normalcells() arRateH #rateLaw
	0  -> Tumourcells() arRateT #rateLaw
	0  -> Immunecells() arRateI #rateLaw
end reaction rules
end model
