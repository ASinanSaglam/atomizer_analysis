###
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000597', 'http://identifiers.org/biomodels.db/MODEL1510190000']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/26468131']
#@BQM_IS_DERIVED_FROM:['http://identifiers.org/biomodels.db/BIOMD0000000412']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/3702']
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0042752']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is an atomized translation of an SBML model created on 12/08/2021. The original model has 28 molecules and 56 reactions. The translated model has 24 molecules and 57 rules'
###
begin model
begin parameters
	n1 2.6
	n2 0.64
	n3 0.29
	n4 0.07
	n5 0.23
	n6 20.0
	n7 0.2
	n8 0.5
	n9 0.2
	n10 0.4
	n11 0.6
	n12 12.5
	n13 1.3
	n14 0.1
	g1 0.1
	g2 0.01
	g3 0.6
	g4 0.01
	g5 0.15
	g6 0.3
	g7 0.6
	g8 0.01
	g9 0.3
	g10 0.5
	g11 0.7
	g12 0.2
	g13 1.0
	g14 0.004
	g15 0.4
	g16 0.3
	m1 0.3
	m2 0.24
	m3 0.2
	m4 0.2
	m5 0.3
	m6 0.3
	m7 0.7
	m8 0.4
	m9 1.1
	m10 1.0
	m11 1.0
	m12 1.0
	m13 0.32
	m14 0.4
	m15 0.7
	m16 0.5
	m17 0.5
	m18 3.4
	m19 0.2
	m20 0.6
	m21 0.08
	m22 0.1
	m23 1.8
	m24 0.1
	m25 1.8
	m26 0.5
	m27 0.1
	m28 20.0
	m29 5.0
	m30 3.0
	m31 0.3
	m32 0.2
	m33 13.0
	m34 0.6
	m35 0.3
	m36 0.1
	m37 0.8
	m38 0.5
	m39 0.3
	a 2.0
	b 2.0
	c 2.0
	d 2.0
	__e__ 2.0
	f 2.0
	p1 0.13
	p2 0.27
	p3 0.1
	p4 0.56
	p5 4.0
	p6 0.6
	p7 0.3
	p8 0.6
	p9 0.8
	p10 0.54
	p11 0.51
	p12 3.4
	p13 0.1
	p14 0.14
	p15 3.0
	p16 0.62
	p17 4.8
	p18 4.0
	p19 1.0
	p20 0.1
	p21 1.0
	p22 0.5
	p23 0.37
	p24 10.0
	p25 8.0
	p26 0.3
	p27 0.8
	p28 2.0
	p29 0.1
	p30 0.9
	p31 0.1
	q1 1.2
	q2 1.56
	q3 2.8
	E34 1.0
	Gn 1.0
	EGn 1.0
	amplitudeStep1 1.0
	pulseDurationStep1 12.0
	cyclePeriodStep1 24.0
	rampDurationStep1 0.05
	offsetStep1 0
	phaseStep1 0
end parameters
begin molecule types
	cG(ce3,cztl)
	cP7_m()
	cP()
	cNI()
	cEC()
	cE3_m()
	cP9_m()
	cNI_m()
	cL()
	cT_m()
	cG_m()
	cP9()
	cLUX_m()
	cE4()
	cCOP1(c~C~0,n~N~0)
	cE4_m()
	cCOP1d()
	cL_m()
	cZTL(cg)
	cLm()
	cP7()
	cT()
	cE3(cg,n~N~0)
	cLUX()
end molecule types
begin seed species
	cCOP1(c~C,n~0) 196859180000000.03 # (0.3269 * 1e-09)mol/L * 6.022e23/mol *1.0L #cCOP1c #cCOP1c
	cCOP1d() 154524520000000.03 #original 0.2566substance/volume #cCOP1d #cCOP1d
	cCOP1(c~0,n~N) 391430000000000.06 #original 0.65substance/volume #cCOP1n #cCOP1n
	cE3(cg,n~0) 90510660000000.0 #original 0.1503substance/volume #cE3 #cE3
	cE3_m() 180118020000000.0 #original 0.2991substance/volume #cE3_m #cE3_m
	cE3(cg,n~N) 17222920000000.002 #original 0.0286substance/volume #cE3n #cE3n
	cE4() 124655400000000.02 #original 0.207substance/volume #cE4 #cE4
	cE4_m() 60942640000000.01 #original 0.1012substance/volume #cE4_m #cE4_m
	cEC() 42695980000000.01 #original 0.0709substance/volume #cEC #cEC
	cE3(cg!74,n~0).cG(ce3!74,cztl) 2469020000000.0005 #original 0.0041substance/volume #cEG #cEG
	cG(ce3,cztl) 11803120000000.002 #original 0.0196substance/volume #cG #cG
	cG_m() 61243740000000.01 #original 0.1017substance/volume #cG_m #cG_m
	cL() 304713200000000.0 #original 0.506substance/volume #cL #cL
	cLUX() 346867200000000.0 #original 0.576substance/volume #cLUX #cLUX
	cLUX_m() 60942640000000.01 #original 0.1012substance/volume #cLUX_m #cLUX_m
	cL_m() 611293220000000.0 #original 1.0151substance/volume #cL_m #cL_m
	cLm() 47453360000000.0 #original 0.0788substance/volume #cLm #cLm
	cNI() 41973340000000.0 #original 0.0697substance/volume #cNI #cNI
	cNI_m() 44020820000000.0 #original 0.0731substance/volume #cNI_m #cNI_m
	cP() 575703200000000.0 #original 0.956substance/volume #cP #cP
	cP7() 70276740000000.0 #original 0.1167substance/volume #cP7 #cP7
	cP7_m() 241843520000000.03 #original 0.4016substance/volume #cP7_m #cP7_m
	cP9() 14332360000000.004 #original 0.0238substance/volume #cP9 #cP9
	cP9_m() 39624760000000.0 #original 0.0658substance/volume #cP9_m #cP9_m
	cT() 26195700000000.0 #original 0.0435substance/volume #cT #cT
	cT_m() 58834940000000.0 #original 0.0977substance/volume #cT_m #cT_m
	cG(ce3,cztl!40).cZTL(cg!40) 45466100000000.0 #original 0.0755substance/volume #cZG #cZG
	cZTL(cg) 150851100000000.0 #original 0.2505substance/volume #cZTL #cZTL
end seed species
begin observables
	Species cCOP1c cCOP1(c~C,n~0) #cCOP1c
	Species cCOP1d cCOP1d() #cCOP1d
	Species cCOP1n cCOP1(c~0,n~N) #cCOP1n
	Species cE3 cE3(cg,n~0) #cE3
	Species cE3_m cE3_m() #cE3_m
	Species cE3n cE3(cg,n~N) #cE3n
	Species cE4 cE4() #cE4
	Species cE4_m cE4_m() #cE4_m
	Species cEC cEC() #cEC
	Species cEG cE3(cg!74,n~0).cG(ce3!74,cztl) #cEG
	Species cG cG(ce3,cztl) #cG
	Species cG_m cG_m() #cG_m
	Species cL cL() #cL
	Species cLUX cLUX() #cLUX
	Species cLUX_m cLUX_m() #cLUX_m
	Species cL_m cL_m() #cL_m
	Species cLm cLm() #cLm
	Species cNI cNI() #cNI
	Species cNI_m cNI_m() #cNI_m
	Species cP cP() #cP
	Species cP7 cP7() #cP7
	Species cP7_m cP7_m() #cP7_m
	Species cP9 cP9() #cP9
	Species cP9_m cP9_m() #cP9_m
	Species cT cT() #cT
	Species cT_m cT_m() #cT_m
	Species cZG cG(ce3,cztl!40).cZTL(cg!40) #cZG
	Species cZTL cZTL(cg) #cZTL
end observables
begin functions
	step1() = 0.5*amplitudeStep1*(tanh((cyclePeriodStep1*(-min(rint(-0.5 + (phaseStep1 + time())/cyclePeriodStep1), rint(0.5 + (phaseStep1 + time())/cyclePeriodStep1)) + (phaseStep1 + time())/cyclePeriodStep1) - cyclePeriodStep1)/rampDurationStep1) + 1) - 0.5*amplitudeStep1*(tanh((cyclePeriodStep1*(-min(rint(-0.5 + (phaseStep1 + time())/cyclePeriodStep1), rint(0.5 + (phaseStep1 + time())/cyclePeriodStep1)) + (phaseStep1 + time())/cyclePeriodStep1) - pulseDurationStep1)/rampDurationStep1) + 1) + 0.5*amplitudeStep1*(tanh(cyclePeriodStep1*(-min(rint(-0.5 + (phaseStep1 + time())/cyclePeriodStep1), rint(0.5 + (phaseStep1 + time())/cyclePeriodStep1)) + (phaseStep1 + time())/cyclePeriodStep1)/rampDurationStep1) + 1) + offsetStep1
	L() = step1
	D() = 1 - L
	fRate0() = (L*cP*q1*(g1^a + (cNI + cP7 + cP9 + cT)^a) + g1^a*n1)/(g1^a + (cNI + cP7 + cP9 + cT)^a)
	fRate1() = cL_m*(L*m1 + m2)
	fRate2() = cL_m*(L*p1 + p2)
	fRate3() = cL*m3 + cL^c*p3/(cL^c + g3^c)
	fRate4() = cL^c*p3/(cL^c + g3^c)
	fRate6() = D*p7
	fRate6m() = D*p7
	fRate7() = L*m11
	fRate8() = L*cP*q3 + cL^__e__*g8*n7/(cEC*cL^__e__ + cEC*g9^__e__ + cL^__e__*g8 + g8*g9^__e__) + g8*n4/(cEC + g8)
	fRate10() = cP9_m*p8
	fRate11() = cP9*(D*m22 + m13)
	fRate12() = (cP9^f*n9*(g10^__e__ + (cL + cLm)^__e__) + n8*(cL + cLm)^__e__*(cP9^f + g11^f))/((cP9^f + g11^f)*(g10^__e__ + (cL + cLm)^__e__))
	fRate14() = cP7_m*p9
	fRate15() = cP7*(D*m23 + m15)
	fRate16() = (cLm^__e__*n10*(cP7^b + g13^b) + cP7^b*n11*(cLm^__e__ + g12^__e__))/((cLm^__e__ + g12^__e__)*(cP7^b + g13^b))
	fRate18() = cNI_m*p10
	fRate19() = cNI*(D*m24 + m17)
	fRate20() = g4*g5^__e__*n2/(cEC*cL^__e__ + cEC*g5^__e__ + cL^__e__*g4 + g4*g5^__e__)
	fRate22() = cT_m*p4
	fRate23() = cT*m8 + cT*(cZG + cZTL*p5)*(D*m7 + m6)
	fRate24() = g2*g6^__e__*n13/(cEC*cL^__e__ + cEC*g6^__e__ + cL^__e__*g2 + g2*g6^__e__)
	fRate26() = cE4_m*p23
	fRate27() = -cE3n*cE4*p21*p25/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21) + cE3n*cE4*p25 + cE4*m35
	fRate28() = g16^__e__*n3/(cL^__e__ + g16^__e__)
	fRate30() = cE3_m*p16
	fRate31() = cCOP1c*m9
	fRate33() = cCOP1d*cE3n*m30 + cCOP1n*cE3n*m29 - cE3n*cE4*p21*p25/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21) + cE3n*cE4*p25 + cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29)
	fRate34() = g2*g6^__e__*n13/(cEC*cL^__e__ + cEC*g6^__e__ + cL^__e__*g2 + g2*g6^__e__)
	fRate36() = cLUX_m*p27
	fRate37() = cE3n*cE4*cLUX*p25*p26/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21) + cLUX*m39
	fRate39() = cCOP1c*m27*(L*p15 + 1)
	fRate41() = cCOP1n*m27*(L*p15 + 1)
	fRate42() = L*cCOP1n*cP*n6 + cCOP1n*n14
	fRate43() = cCOP1d*m31*(D*m33 + 1)
	fRate44() = (L*cP*q2*(cEC*cL^__e__ + cEC*g15^__e__ + cL^__e__*g14 + g14*g15^__e__) + g14*g15^__e__*n12)/(cEC*cL^__e__ + cEC*g15^__e__ + cL^__e__*g14 + g14*g15^__e__)
	fRate46() = cG_m*p11
	fRate47() = cG*m19 - cG*p28*p29/(cE3n*p17 + m19 + p29) + cG*p28
	fRate48() = L*p12
	fRate48m() = D*p13
	fRate53() = cCOP1c*cEG*m9 + cEG*p18 - p31*(cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m10 + cCOP1n*m9 + p31)
	fRate54() = cE3n*cE4*cLUX*p25*p26/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21)
	fRate55() = cCOP1d*cEC*m37 + cCOP1n*cEC*m36 + cEC*m32*(L*p24*(cG*p28/(cE3n*p17 + m19 + p29) + (cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m10 + cCOP1n*m9 + p31))^d/(g7^d + (cG*p28/(cE3n*p17 + m19 + p29) + (cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m10 + cCOP1n*m9 + p31))^d) + 1)
end functions
begin reaction rules
	cL_m_trscr: 0  -> cL_m() fRate0() #Modifiers(cNI, cP, cP7, cP9, cT, cNI, cP, cP7, cP9, cT)
	cL_m_degr_reactants_0: 0  -> cL_m() -1*(fRate1()) #Modifiers(cL_m)
	cL_trsl: 0  -> cL() fRate2() #Modifiers(cL_m, cL_m)
	cL_degr_reactants_0: 0  -> cL() -1*(fRate3()) #Modifiers(cL)
	cL_modif: 0  -> cLm() fRate4() #Modifiers(cL, cL)
	cLm_degr: cLm() -> 0  m4 #Modifiers(cLm)
	cP_trsl: 0  <-> cP() fRate6(),fRate6m() #Modifiers(cP)
	cP_degr: cP() -> 0  fRate7() #Modifiers(cP)
	cP9_m_trscr: 0  -> cP9_m() fRate8() #Modifiers(cEC, cL, cP, cEC, cL, cP)
	cP9_m_degr: cP9_m() -> 0  m12 #Modifiers(cP9_m)
	cP9_trsl: 0  -> cP9() fRate10() #Modifiers(cP9_m, cP9_m)
	cP9_degr_reactants_0: 0  -> cP9() -1*(fRate11()) #Modifiers(cP9)
	cP7_m_trscr: 0  -> cP7_m() fRate12() #Modifiers(cL, cLm, cP9, cL, cLm, cP9)
	cP7_m_degr: cP7_m() -> 0  m14 #Modifiers(cP7_m)
	cP7_trsl: 0  -> cP7() fRate14() #Modifiers(cP7_m, cP7_m)
	cP7_degr_reactants_0: 0  -> cP7() -1*(fRate15()) #Modifiers(cP7)
	cNI_m_trscr: 0  -> cNI_m() fRate16() #Modifiers(cLm, cP7, cLm, cP7)
	cNI_m_degr: cNI_m() -> 0  m16 #Modifiers(cNI_m)
	cNI_trsl: 0  -> cNI() fRate18() #Modifiers(cNI_m, cNI_m)
	cNI_degr_reactants_0: 0  -> cNI() -1*(fRate19()) #Modifiers(cNI)
	cT_m_trscr: 0  -> cT_m() fRate20() #Modifiers(cEC, cL, cEC, cL)
	cT_m_degr: cT_m() -> 0  m5 #Modifiers(cT_m)
	cT_trsl: 0  -> cT() fRate22() #Modifiers(cT_m, cT_m)
	cT_degr_reactants_0: 0  -> cT() -1*(fRate23()) #Modifiers(cZG, cZTL, cT, cZG, cZTL)
	cE4_m_trscr: 0  -> cE4_m() fRate24() #Modifiers(cEC, cL, cEC, cL)
	cE4_m_degr: cE4_m() -> 0  m34 #Modifiers(cE4_m)
	cE4_trsl: 0  -> cE4() fRate26() #Modifiers(cE4_m, cE4_m)
	cE4_degr_reactants_0: 0  -> cE4() -1*(fRate27()) #Modifiers(cCOP1d, cCOP1n, cE3n, cLUX, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cE3_m_trscr: 0  -> cE3_m() fRate28() #Modifiers(cL, cL)
	cE3_m_degr: cE3_m() -> 0  m26 #Modifiers(cE3_m)
	cE3_trsl: 0  -> cE3(cg,n~0) fRate30() #Modifiers(cE3_m, cE3_m)
	cE3_degr: cE3(cg,n~0) -> 0  fRate31() #Modifiers(cCOP1c, cCOP1c, cE3)
	cE3n_import: cE3(cg,n~0) <-> cE3(cg,n~N) p19,p20 #Modifiers(cE3, cE3n)
	cE3n_degr_reactants_0: 0  -> cE3(cg,n~N) -1*(fRate33()) #Modifiers(cCOP1d, cCOP1n, cE4, cG, cLUX, cCOP1d, cCOP1n, cE3n, cE4, cG, cLUX)
	cLUX_m_trscr: 0  -> cLUX_m() fRate34() #Modifiers(cEC, cL, cEC, cL)
	cLUX_m_degr: cLUX_m() -> 0  m34 #Modifiers(cLUX_m)
	cLUX_trsl: 0  -> cLUX() fRate36() #Modifiers(cLUX_m, cLUX_m)
	cLUX_degr_reactants_0: 0  -> cLUX() -1*(fRate37()) #Modifiers(cCOP1d, cCOP1n, cE3n, cE4, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cCOP1c_trsl: 0  -> cCOP1(c~C,n~0) n5
	cCOP1c_degr_reactants_0: 0  -> cCOP1(c~C,n~0) -1*(fRate39()) #Modifiers(cCOP1c)
	cCOP1n_import: cCOP1(c~C,n~0) -> cCOP1(c~0,n~N) p6 #Modifiers(cCOP1c)
	cCOP1n_degr_reactants_0: 0  -> cCOP1(c~0,n~N) -1*(fRate41()) #Modifiers(cCOP1n)
	cCOP1d_activ_reactants_0: 0  -> cCOP1(c~0,n~N) -1*(fRate42()) #Modifiers(cP, cCOP1n, cP)
	cCOP1d_activ_products_0: 0  -> cCOP1d() fRate42() #Modifiers(cP, cCOP1n, cP)
	cCOP1d_degr_reactants_0: 0  -> cCOP1d() -1*(fRate43()) #Modifiers(cCOP1d)
	cG_m_trscr: 0  -> cG_m() fRate44() #Modifiers(cEC, cL, cP, cEC, cL, cP)
	cG_m_degr: cG_m() -> 0  m18 #Modifiers(cG_m)
	cG_trsl: 0  -> cG(ce3,cztl) fRate46() #Modifiers(cG_m, cG_m)
	cG_degr_reactants_0: 0  -> cG(ce3,cztl) -1*(fRate47()) #Modifiers(cE3n, cE3n, cG)
	cG_cZTL_assoc: cG(ce3,cztl) + cZTL(cg) <-> cG(ce3,cztl!40).cZTL(cg!40) fRate48(),fRate48m() #Modifiers(cG, cZG, cZTL)
	cZTL_trsl: 0  -> cZTL(cg) p14
	cZTL_degr: cZTL(cg) -> 0  m20 #Modifiers(cZTL)
	cZG_degr: cG(ce3,cztl!40).cZTL(cg!40) -> 0  m21 #Modifiers(cZG)
	cG_cE3_assoc: cE3(cg,n~0) + cG(ce3,cztl) -> cE3(cg!74,n~0).cG(ce3!74,cztl) p17 #Modifiers(cE3, cG)
	cEG_degr_reactants_0: 0  -> cE3(cg!74,n~0).cG(ce3!74,cztl) -1*(fRate53()) #Modifiers(cCOP1c, cCOP1d, cCOP1n, cE3n, cG, cCOP1c, cCOP1d, cCOP1n, cE3n, cEG, cG)
	cEC_form: 0  -> cEC() fRate54() #Modifiers(cCOP1d, cCOP1n, cE3n, cE4, cLUX, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cEC_degr_reactants_0: 0  -> cEC() -1*(fRate55()) #Modifiers(cCOP1d, cCOP1n, cE3n, cEG, cG, cCOP1d, cCOP1n, cE3n, cEC, cEG, cG)
end reaction rules
end model
