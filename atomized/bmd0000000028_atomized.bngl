###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL6618552953', 'http://identifiers.org/biomodels.db/BIOMD0000000028']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/14744999']
#@BQB_IS_VERSION_OF:['http://identifiers.org/obo.go/GO:0000165']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/8355']
#@creatorEmail:'lenov@ebi.ac.uk'
#@creatorName:'Le Nov√®re Nicolas'
#@notes:'This is an atomized translation of an SBML model created on 12/08/2021. The original model has 16 molecules and 17 reactions. The translated model has 6 molecules and 17 rules'
###
begin model
begin parameters
	k1 0.005
	k_1 1.0
	k2 1.08
	k3 0.025
	k_3 1.0
	k4 0.007
	k5 0.05
	k_5 1.0
	k6 0.008
	k7 0.005
	k_7 1.0
	k8 0.45
	h1 0.045
	h_1 1.0
	h2 0.092
	h3 1.0
	h_3 0.01
	h4 0.01
	h_4 1.0
	h5 0.5
	h6 0.086
	h_6 0.0011
	h7 0.01
	h_7 1.0
	h8 0.47
	h9 0.14
	h_9 0.0018
end parameters
begin molecule types
	#^ bqbiol:isVersionOf uniprot:P26696
	ERK(_pp~_PP~0,_pt~_PT~0,_py~_PY~0,mek,mkp3)
	ERK_MKP3_Y()
	#^ bqbiol:is uniprot:Q05116
	MEK(erk)
	ERK_MEK_T()
	ERK_PT_MKP3_T()
	#^ bqbiol:is uniprot:Q90W58
	MKP3(erk)
end molecule types
begin seed species
	ERK(_pp~0,_pt~0,_py~0,mek,mkp3) 4.8176000000000006e+17 # (800.0 * 1e-09)mol/L * 6.022e23/mol *1.0L #ERK #M
	MEK(erk) 1.0839600000000002e+17 #original 180.0nanomole (default)/L  #MEK #MEK
	MKP3(erk) 6.022000000000001e+16 #original 100.0nanomole (default)/L  #MKP3 #MKP3
end seed species
begin observables
	Species ERK ERK(_pp~0,_pt~0,_py~0,mek,mkp3) #ERK
	Species ERK_PY ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3) #ERK-PY
	Species ERK_PT ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3) #ERK-PT
	Species ERK_PP ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3) #ERK-PP
	Species MEK MEK(erk) #MEK
	Species MKP3 MKP3(erk) #MKP3
	Species ERK_PY_MEK ERK(_pp~0,_pt~0,_py~_PY,mek!32,mkp3).MEK(erk!32) #ERK-PY_MEK
	Species ERK_PT_MEK ERK(_pp~0,_pt~_PT,_py~0,mek!32,mkp3).MEK(erk!32) #ERK-PT_MEK
	Species ERK_MEK_Y ERK(_pp~0,_pt~0,_py~0,mek!32,mkp3).MEK(erk!32) #ERK_MEK_Y
	Species ERK_MEK_T ERK_MEK_T() #ERK_MEK_T
	Species ERK_PP_MKP3 ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) #ERK-PP_MKP3
	Species ERK_PY_MKP3 ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3!39).MKP3(erk!39) #ERK-PY_MKP3
	Species ERK_PT_MKP3_Y ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3!39).MKP3(erk!39) #ERK-PT_MKP3_Y
	Species ERK_PT_MKP3_T ERK_PT_MKP3_T() #ERK-PT_MKP3_T
	Species ERK_MKP3_T ERK(_pp~0,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) #ERK_MKP3_T
	Species ERK_MKP3_Y ERK_MKP3_Y() #ERK_MKP3_Y
end observables
begin reaction rules
	reaction_0000001: ERK(_pp~0,_pt~0,_py~0,mek,mkp3) + MEK(erk) <-> ERK(_pp~0,_pt~0,_py~0,mek!32,mkp3).MEK(erk!32) k1,k_1
	reaction_0000002: ERK(_pp~0,_pt~0,_py~0,mek!32,mkp3).MEK(erk!32) -> ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3) + MEK(erk) k2
	reaction_0000003: ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3) + MEK(erk) <-> ERK(_pp~0,_pt~0,_py~_PY,mek!32,mkp3).MEK(erk!32) k3,k_3
	reaction_0000004: ERK(_pp~0,_pt~0,_py~_PY,mek!32,mkp3).MEK(erk!32) -> ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3) + MEK(erk) k4
	reaction_0000005: ERK(_pp~0,_pt~0,_py~0,mek,mkp3) + MEK(erk) <-> ERK_MEK_T() k5,k_5
	reaction_0000006: ERK_MEK_T() -> ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3) + MEK(erk) k6
	reaction_0000007: ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3) + MEK(erk) <-> ERK(_pp~0,_pt~_PT,_py~0,mek!32,mkp3).MEK(erk!32) k7,k_7
	reaction_0000008: ERK(_pp~0,_pt~_PT,_py~0,mek!32,mkp3).MEK(erk!32) -> ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3) + MEK(erk) k8
	reaction_0000009: ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3) + MKP3(erk) <-> ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) h1,h_1
	reaction_0000010: ERK(_pp~_PP,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) -> ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3!39).MKP3(erk!39) h2
	reaction_0000011: ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3!39).MKP3(erk!39) <-> ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3) + MKP3(erk) h3,h_3
	reaction_0000012: ERK_PT_MKP3_T() -> ERK(_pp~0,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) h5
	reaction_0000013: ERK(_pp~0,_pt~_PT,_py~0,mek,mkp3) + MKP3(erk) <-> ERK_PT_MKP3_T() h4,h_4
	reaction_0000014: ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3!39).MKP3(erk!39) -> ERK_MKP3_Y() h8
	reaction_0000015: ERK(_pp~0,_pt~0,_py~0,mek,mkp3!39).MKP3(erk!39) <-> ERK(_pp~0,_pt~0,_py~0,mek,mkp3) + MKP3(erk) h6,h_6
	reaction_0000017: ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3) + MKP3(erk) <-> ERK(_pp~0,_pt~0,_py~_PY,mek,mkp3!39).MKP3(erk!39) h7,h_7
	reaction_0000019: ERK_MKP3_Y() <-> ERK(_pp~0,_pt~0,_py~0,mek,mkp3) + MKP3(erk) h9,h_9
end reaction rules
end model
