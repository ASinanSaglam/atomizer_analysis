###
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000492', 'http://identifiers.org/biomodels.db/MODEL1308220000']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/23847397']
#@BQB_HAS_PROPERTY:['http://identifiers.org/mamo/MAMO_0000046']
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0000165', 'http://identifiers.org/go/GO:0071216']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/33090']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is an atomized translation of an SBML model created on 12/08/2021. The original model has 52 molecules and 88 reactions. The translated model has 38 molecules and 88 rules'
###
begin model
begin parameters
	kdiss_re1 1.0 #units:per_second
	kass_re1 1.0 #units:per_second
	kdiss_re2 1.0 #units:per_second
	kass_re2 1.0 #units:per_second
	kdiss_re3 1.0 #units:per_second
	kass_re3 1.0 #units:per_second
	kdiss_re4 1.0 #units:per_second
	kass_re4 1.0 #units:per_second
	kdiss_re5 1.0 #units:per_second
	kass_re5 1.0 #units:per_second
	kdiss_re6 1.0 #units:per_second
	kass_re6 1.0 #units:per_second
	kdiss_re7 1.0 #units:per_second
	kass_re7 1.0 #units:per_second
	kdiss_re8 1.0 #units:per_second
	kass_re8 1.0 #units:per_second
	kdiss_re9 1.0 #units:per_second
	kass_re9 1.0 #units:per_second
	kdiss_re10 1.0 #units:per_second
	kass_re10 1.0 #units:per_second
	kdiss_re11 1.0 #units:per_second
	kass_re11 1.0 #units:per_second
	kdiss_re12 1.0 #units:per_second
	kass_re12 1.0 #units:per_second
	kdiss_re13 1.0 #units:per_second
	kass_re13 1.0 #units:per_second
	kdiss_re14 1.0 #units:per_second
	kass_re14 1.0 #units:per_second
	kdiss_re15 1.0 #units:per_second
	kass_re15 1.0 #units:per_second
	kdiss_re16 1.0 #units:per_second
	kass_re16 1.0 #units:per_second
	kdiss_re17 1.0 #units:per_second
	kass_re17 1.0 #units:per_second
	kdiss_re18 1.0 #units:per_second
	kass_re18 1.0 #units:per_second
	kdiss_re19 1.0 #units:per_second
	kass_re19 1.0 #units:per_second
	kdiss_re20 1.0 #units:per_second
	kass_re20 1.0 #units:per_second
	kdiss_re21 1.0 #units:per_second
	kass_re21 1.0 #units:per_second
	kdiss_re22 1.0 #units:per_second
	kass_re22 1.0 #units:per_second
	kdiss_re23 1.0 #units:per_second
	kass_re23 1.0 #units:per_second
	kdiss_re24 1.0 #units:per_second
	kass_re24 1.0 #units:per_second
	kdiss_re25 1.0 #units:per_second
	kass_re25 1.0 #units:per_second
	kdiss_re26 1.0 #units:per_second
	kass_re26 1.0 #units:per_second
	kdiss_re27 1.0 #units:per_second
	kass_re27 1.0 #units:per_second
	kdiss_re28 1.0 #units:per_second
	kass_re28 1.0 #units:per_second
	kdiss_re29 1.0 #units:per_second
	kass_re29 1.0 #units:per_second
	kdiss_re30 1.0 #units:per_second
	kass_re30 1.0 #units:per_second
	kdiss_re31 1.0 #units:per_second
	kass_re31 1.0 #units:per_second
	kdiss_re32 1.0 #units:per_second
	kass_re32 1.0 #units:per_second
	kdiss_re33 1.0 #units:per_second
	kass_re33 1.0 #units:per_second
	kdiss_re34 1.0 #units:per_second
	kass_re34 1.0 #units:per_second
	kdiss_re35 1.0 #units:per_second
	kass_re35 1.0 #units:per_second
	kdiss_re36 1.0 #units:per_second
	kass_re36 1.0 #units:per_second
	kdiss_re37 1.0 #units:per_second
	kass_re37 1.0 #units:per_second
	kdiss_re38 1.0 #units:per_second
	kass_re38 1.0 #units:per_second
	kdiss_re39 1.0 #units:per_second
	kass_re39 1.0 #units:per_second
	kdiss_re40 1.0 #units:per_second
	kass_re40 1.0 #units:per_second
	kdiss_re41 1.0 #units:per_second
	kass_re41 1.0 #units:per_second
	kdiss_re42 1.0 #units:per_second
	kass_re42 1.0 #units:per_second
	kdiss_re43 1.0 #units:per_second
	kass_re43 1.0 #units:per_second
	kdiss_re44 1.0 #units:per_second
	kass_re44 1.0 #units:per_second
	kdiss_re45 1.0 #units:per_second
	kass_re45 1.0 #units:per_second
	kdiss_re46 1.0 #units:per_second
	kass_re46 1.0 #units:per_second
	kdiss_re47 1.0 #units:per_second
	kass_re47 1.0 #units:per_second
	kdiss_re48 1.0 #units:per_second
	kass_re48 1.0 #units:per_second
	kdiss_re49 1.0 #units:per_second
	kass_re49 1.0 #units:per_second
	kdiss_re50 1.0 #units:per_second
	kass_re50 1.0 #units:per_second
	kdiss_re51 1.0 #units:per_second
	kass_re51 1.0 #units:per_second
	kdiss_re52 1.0 #units:per_second
	kass_re52 1.0 #units:per_second
	kdiss_re53 1.0 #units:per_second
	kass_re53 1.0 #units:per_second
	kdiss_re54 1.0 #units:per_second
	kass_re54 1.0 #units:per_second
	kdiss_re55 1.0 #units:per_second
	kass_re55 1.0 #units:per_second
	kdiss_re56 1.0 #units:per_second
	kass_re56 1.0 #units:per_second
	kdiss_re57 1.0 #units:per_second
	kass_re57 1.0 #units:per_second
	kdiss_re58 1.0 #units:per_second
	kass_re58 1.0 #units:per_second
	kdiss_re59 1.0 #units:per_second
	kass_re59 1.0 #units:per_second
	kdiss_re60 1.0 #units:per_second
	kass_re60 1.0 #units:per_second
	kdiss_re61 1.0 #units:per_second
	kass_re61 1.0 #units:per_second
	kdiss_re62 1.0 #units:per_second
	kass_re62 1.0 #units:per_second
	kdiss_re63 1.0 #units:per_second
	kass_re63 1.0 #units:per_second
	kdiss_re64 1.0 #units:per_second
	kass_re64 1.0 #units:per_second
	kdiss_re65 1.0 #units:per_second
	kass_re65 1.0 #units:per_second
	kdiss_re66 1.0 #units:per_second
	kass_re66 1.0 #units:per_second
	kdiss_re67 1.0 #units:per_second
	kass_re67 1.0 #units:per_second
	kdiss_re68 1.0 #units:per_second
	kass_re68 1.0 #units:per_second
	kdiss_re69 1.0 #units:per_second
	kass_re69 1.0 #units:per_second
	kdiss_re70 1.0 #units:per_second
	kass_re70 1.0 #units:per_second
	kdiss_re71 1.0 #units:per_second
	kass_re71 1.0 #units:per_second
	kdiss_re72 1.0 #units:per_second
	kass_re72 1.0 #units:per_second
	kdiss_re73 1.0 #units:per_second
	kass_re73 1.0 #units:per_second
	kdiss_re74 1.0 #units:per_second
	kass_re74 1.0 #units:per_second
	kdiss_re75 1.0 #units:per_second
	kass_re75 1.0 #units:per_second
	kdiss_re76 1.0 #units:per_second
	kass_re76 1.0 #units:per_second
	kdiss_re77 1.0 #units:per_second
	kass_re77 1.0 #units:per_second
	kdiss_re78 1.0 #units:per_second
	kass_re78 1.0 #units:per_second
	kdiss_re79 1.0 #units:per_second
	kass_re79 1.0 #units:per_second
	kdiss_re80 1.0 #units:per_second
	kass_re80 1.0 #units:per_second
	kdiss_re81 1.0 #units:per_second
	kass_re81 1.0 #units:per_second
	kdiss_re82 1.0 #units:per_second
	kass_re82 1.0 #units:per_second
	kdiss_re83 1.0 #units:per_second
	kass_re83 1.0 #units:per_second
	kdiss_re84 1.0 #units:per_second
	kass_re84 1.0 #units:per_second
	kdiss_re85 1.0 #units:per_second
	kass_re85 1.0 #units:per_second
	kdiss_re86 1.0 #units:per_second
	kass_re86 1.0 #units:per_second
	kdiss_re87 1.0 #units:per_second
	kass_re87 1.0 #units:per_second
	kdiss_re88 1.0 #units:per_second
	kass_re88 1.0 #units:per_second
end parameters
begin compartments
	#volume units: volume
	default 3 1.0
	c1 3 1.0 #Cytosol
	c2 3 1.0 #Nucleus
end compartments
begin molecule types
	#^ bqbiol:isHomologTo uniprot:Q13163
	MAPKK5()
	#^ bqbiol:isVersionOf uniprot:O22921, uniprot:O22921
	WRKY25(_s39~_S39~0)
	#^ bqbiol:isHomologTo uniprot:Q54P26
	SAMK()
	MAPKKK_s8()
	#^ bqbiol:isHomologTo uniprot:P45985
	MAPKK4()
	#^ bqbiol:isVersionOf uniprot:O04609, uniprot:O04609
	WRKY22(_s43~_S43~0)
	#^ bqbiol:isVersionOf uniprot:Q9ZVP5
	MAPKKK18()
	#^ bqbiol:isVersionOf uniprot:Q9SI37, uniprot:Q9SI37
	WRKY1(_s29~_S29~0)
	#^ bqbiol:isVersionOf uniprot:Q9FL28
	FLS2()
	#^ bqbiol:isVersionOf uniprot:Q93ZH0
	LysM(Fungalpathogen~Fungalpathogen~0)
	#^ bqbiol:isVersionOf uniprot:Q0WV96
	NAC()
	#^ bqbiol:isHomologTo uniprot:Q6T6J8
	SIMK()
	#^ bqbiol:isHomologTo uniprot:Q02750
	MAPKK9()
	MAPK_s21()
	#^ bqbiol:isVersionOf uniprot:Q9SZP1, uniprot:Q9SZP1
	MYB4(_s37~_S37~0)
	#^ bqbiol:isHomologTo uniprot:P31152
	MAPK4()
	MAPKK_s15()
	#^ bqbiol:isVersionOf uniprot:Q8S8P5, uniprot:Q8S8P5
	WRKY33(_s33~_S33~0)
	#^ bqbiol:isVersionOf uniprot:Q9FPR3
	EDR1()
	#^ bqbiol:isVersionOf uniprot:Q9C519, uniprot:Q9C519
	WRKY6(_s35~_S35~0)
	#^ bqbiol:isVersionOf uniprot:Q93WY4, uniprot:Q93WY4
	WRKY12(_s41~_S41~0)
	#^ bqbiol:isVersionOf uniprot:Q8VWJ2, uniprot:Q8VWJ2
	WRKY28(_s45~_S45~0)
	#^ bqbiol:isVersionOf uniprot:Q9FVQ6
	PRRs(Bacterialpathogen~Bacterialpathogen~0)
	#^ bqbiol:isVersionOf uniprot:B2CT00
	AP2()
	#^ bqbiol:isHomologTo uniprot:Q9C5H5, uniprot:Q9C5H5
	MAPKKK()
	#^ bqbiol:isVersionOf uniprot:Q9FDW1
	MYB44()
	#^ bqbiol:isVersionOf uniprot:Q39028, uniprot:Q39028
	MYB2(Response~Response~0,_s31~_S31~0)
	#^ bqbiol:isVersionOf uniprot:Q9S7U9
	MAPKK2()
	#^ bqbiol:isHomologTo uniprot:Q13233
	MAPKKK1()
	#^ bqbiol:isVersionOf uniprot:Q9SUS1, uniprot:Q9SUS1
	WRKY29(_s47~_S47~0)
	#^ bqbiol:isHomologTo uniprot:H9D0Z7
	MAPK2()
	#^ bqbiol:isHomologTo uniprot:Q94A04, uniprot:Q94A04
	MAPKK()
	#^ bqbiol:isVersionOf uniprot:Q9FGX2
	bZIP()
	#^ bqbiol:isVersionOf uniprot:Q9FHA5
	MAPKKK19()
	#^ bqbiol:isVersionOf uniprot:Q9SND6
	MAPKKK20()
	#^ bqbiol:isVersionOf uniprot:C0LGN2
	LRR()
	#^ bqbiol:isVersionOf uniprot:Q39026
	MAPK6()
	#^ bqbiol:isHomologTo uniprot:Q39023, uniprot:Q39023
	MAPK(_3~3~0)
end molecule types
begin seed species
	@default:LysM(Fungalpathogen~Fungalpathogen) 0.5 #Fungalpathogen #s1
	@default:PRRs(Bacterialpathogen~Bacterialpathogen) 0.5 #Bacterialpathogen #s2
	@c1:LysM(Fungalpathogen~0) 0.8 #LysM #s3
	@c1:PRRs(Bacterialpathogen~0) 0.8 #PRRs #s4
	@c1:FLS2() 0.8 #FLS2 #s5
	@c1:LRR() 0.8 #LRR #s6
	@c1:MAPKKK() 1.0 #MAPKKK #s7
	@c1:MAPKKK_s8() 1.0 #MAPKKK_s8 #s8
	@c1:MAPKKK1() 1.0 #MAPKKK1 #s9
	@c1:MAPKKK18() 1.0 #MAPKKK18 #s10
	@c1:MAPKKK19() 1.0 #MAPKKK19 #s11
	@c1:MAPKKK20() 1.0 #MAPKKK20 #s12
	@c1:EDR1() 1.0 #EDR1 #s13
	@c1:MAPKK() 1.0 #MAPKK #s14
	@c1:MAPKK_s15() 1.0 #MAPKK_s15 #s15
	@c1:MAPKK2() 1.0 #MAPKK2 #s16
	@c1:MAPKK4() 1.0 #MAPKK4 #s17
	@c1:MAPKK5() 1.0 #MAPKK5 #s18
	@c1:MAPKK9() 1.0 #MAPKK9 #s19
	@c1:MAPK(_3~0) 1.0 #MAPK #s20
	@c1:MAPK_s21() 1.0 #MAPK_s21 #s21
	@c1:MAPK2() 1.0 #MAPK2 #s22
	@c1:MAPK(_3~3) 1.0 #MAPK3 #s23
	@c1:MAPK4() 1.0 #MAPK4 #s24
	@c1:MAPK6() 1.0 #MAPK6 #s25
	@c2:WRKY1(_s29~0) 1.2 #WRKY1 #s28
	@c2:WRKY1(_s29~_S29) 1.2 #WRKY1_s29 #s29
	@c2:MYB2(Response~0,_s31~0) 1.5 #MYB2 #s30
	@c2:MYB2(Response~0,_s31~_S31) 1.5 #MYB2_s31 #s31
	@c2:WRKY33(_s33~0) 1.2 #WRKY33 #s32
	@c2:WRKY33(_s33~_S33) 1.2 #WRKY33_s33 #s33
	@c2:WRKY6(_s35~0) 1.2 #WRKY6 #s34
	@c2:WRKY6(_s35~_S35) 1.2 #WRKY6_s35 #s35
	@c2:MYB4(_s37~0) 1.5 #MYB4 #s36
	@c2:MYB4(_s37~_S37) 1.5 #MYB4_s37 #s37
	@c2:WRKY25(_s39~0) 1.2 #WRKY25 #s38
	@c2:WRKY25(_s39~_S39) 1.2 #WRKY25_s39 #s39
	@c2:WRKY12(_s41~0) 1.2 #WRKY12 #s40
	@c2:WRKY12(_s41~_S41) 1.2 #WRKY12_s41 #s41
	@c2:WRKY22(_s43~0) 1.2 #WRKY22 #s42
	@c2:WRKY22(_s43~_S43) 1.2 #WRKY22_s43 #s43
	@c2:WRKY28(_s45~0) 1.2 #WRKY28 #s44
	@c2:WRKY28(_s45~_S45) 1.2 #WRKY28_s45 #s45
	@c2:WRKY29(_s47~0) 1.2 #WRKY29 #s46
	@c2:WRKY29(_s47~_S47) 1.2 #WRKY29_s47 #s47
	@c2:MYB44() 1.5 #MYB44 #s48
	@c2:NAC() 1.8 #NAC #s49
	@c2:bZIP() 2.0 #bZIP #s50
	@c2:AP2() 2.2 #AP2 #s51
	@default:MYB2(Response~Response,_s31~_S31) 2.5 #Response #s52
	@c1:SIMK() 1.0 #SIMK #s26
	@c1:SAMK() 1.0 #SAMK #s27
end seed species
begin observables
	Species Fungalpathogen_default @default:LysM(Fungalpathogen~Fungalpathogen) #Fungal pathogen
	Species Bacterialpathogen_default @default:PRRs(Bacterialpathogen~Bacterialpathogen) #Bacterial pathogen
	Species LysM_c1 @c1:LysM(Fungalpathogen~0) #LysM
	Species PRRs_c1 @c1:PRRs(Bacterialpathogen~0) #PRRs
	Species FLS2_c1 @c1:FLS2() #FLS2
	Species LRR_c1 @c1:LRR() #LRR
	Species MAPKKK_c1 @c1:MAPKKK() #MAPKKK
	Species MAPKKK_s8_c1 @c1:MAPKKK_s8() #MAPKKK
	Species MAPKKK1_c1 @c1:MAPKKK1() #MAPKKK1
	Species MAPKKK18_c1 @c1:MAPKKK18() #MAPKKK18
	Species MAPKKK19_c1 @c1:MAPKKK19() #MAPKKK19
	Species MAPKKK20_c1 @c1:MAPKKK20() #MAPKKK20
	Species EDR1_c1 @c1:EDR1() #EDR1
	Species MAPKK_c1 @c1:MAPKK() #MAPKK
	Species MAPKK_s15_c1 @c1:MAPKK_s15() #MAPKK
	Species MAPKK2_c1 @c1:MAPKK2() #MAPKK2
	Species MAPKK4_c1 @c1:MAPKK4() #MAPKK4
	Species MAPKK5_c1 @c1:MAPKK5() #MAPKK5
	Species MAPKK9_c1 @c1:MAPKK9() #MAPKK9
	Species MAPK_c1 @c1:MAPK(_3~0) #MAPK
	Species MAPK_s21_c1 @c1:MAPK_s21() #MAPK
	Species MAPK2_c1 @c1:MAPK2() #MAPK2
	Species MAPK3_c1 @c1:MAPK(_3~3) #MAPK3
	Species MAPK4_c1 @c1:MAPK4() #MAPK4
	Species MAPK6_c1 @c1:MAPK6() #MAPK6
	Species WRKY1_c2 @c2:WRKY1(_s29~0) #WRKY1
	Species WRKY1_s29_c2 @c2:WRKY1(_s29~_S29) #WRKY1
	Species MYB2_c2 @c2:MYB2(Response~0,_s31~0) #MYB2
	Species MYB2_s31_c2 @c2:MYB2(Response~0,_s31~_S31) #MYB2
	Species WRKY33_c2 @c2:WRKY33(_s33~0) #WRKY33
	Species WRKY33_s33_c2 @c2:WRKY33(_s33~_S33) #WRKY33
	Species WRKY6_c2 @c2:WRKY6(_s35~0) #WRKY6
	Species WRKY6_s35_c2 @c2:WRKY6(_s35~_S35) #WRKY6
	Species MYB4_c2 @c2:MYB4(_s37~0) #MYB4
	Species MYB4_s37_c2 @c2:MYB4(_s37~_S37) #MYB4
	Species WRKY25_c2 @c2:WRKY25(_s39~0) #WRKY25
	Species WRKY25_s39_c2 @c2:WRKY25(_s39~_S39) #WRKY25
	Species WRKY12_c2 @c2:WRKY12(_s41~0) #WRKY12
	Species WRKY12_s41_c2 @c2:WRKY12(_s41~_S41) #WRKY12
	Species WRKY22_c2 @c2:WRKY22(_s43~0) #WRKY22
	Species WRKY22_s43_c2 @c2:WRKY22(_s43~_S43) #WRKY22
	Species WRKY28_c2 @c2:WRKY28(_s45~0) #WRKY28
	Species WRKY28_s45_c2 @c2:WRKY28(_s45~_S45) #WRKY28
	Species WRKY29_c2 @c2:WRKY29(_s47~0) #WRKY29
	Species WRKY29_s47_c2 @c2:WRKY29(_s47~_S47) #WRKY29
	Species MYB44_c2 @c2:MYB44() #MYB44
	Species NAC_c2 @c2:NAC() #NAC
	Species bZIP_c2 @c2:bZIP() #bZIP
	Species AP2_c2 @c2:AP2() #AP2
	Species Response_default @default:MYB2(Response~Response,_s31~_S31) #Response
	Species SIMK_c1 @c1:SIMK() #SIMK
	Species SAMK_c1 @c1:SAMK() #SAMK
end observables
begin reaction rules
	re1: LysM(Fungalpathogen~Fungalpathogen)@default <-> LysM(Fungalpathogen~0)@c1 kass_re1,kdiss_re1
	re2: LysM(Fungalpathogen~Fungalpathogen)@default <-> PRRs(Bacterialpathogen~0)@c1 kass_re2,kdiss_re2
	re3: LysM(Fungalpathogen~Fungalpathogen)@default <-> FLS2()@c1 kass_re3,kdiss_re3
	re4: PRRs(Bacterialpathogen~Bacterialpathogen)@default <-> PRRs(Bacterialpathogen~0)@c1 kass_re4,kdiss_re4
	re5: PRRs(Bacterialpathogen~Bacterialpathogen)@default <-> FLS2()@c1 kass_re5,kdiss_re5
	re6: PRRs(Bacterialpathogen~Bacterialpathogen)@default <-> LRR()@c1 kass_re6,kdiss_re6
	re7: MAPKKK()@c1 <-> MAPKKK_s8()@c1 kass_re7,kdiss_re7
	re8: LysM(Fungalpathogen~0)@c1 <-> MAPKKK()@c1 kass_re8,kdiss_re8
	re9: PRRs(Bacterialpathogen~0)@c1 <-> MAPKKK()@c1 kass_re9,kdiss_re9
	re10: FLS2()@c1 <-> MAPKKK()@c1 kass_re10,kdiss_re10
	re11: LRR()@c1 <-> MAPKKK()@c1 kass_re11,kdiss_re11
	re12: MAPKKK_s8()@c1 <-> MAPKKK1()@c1 kass_re12,kdiss_re12
	re13: MAPKKK_s8()@c1 <-> MAPKKK18()@c1 kass_re13,kdiss_re13
	re14: MAPKKK_s8()@c1 <-> MAPKKK19()@c1 kass_re14,kdiss_re14
	re15: MAPKKK_s8()@c1 <-> MAPKKK20()@c1 kass_re15,kdiss_re15
	re16: LRR()@c1 <-> MAPKKK1()@c1 kass_re16,kdiss_re16
	re17: MAPKKK_s8()@c1 <-> EDR1()@c1 kass_re17,kdiss_re17
	re18: FLS2()@c1 <-> EDR1()@c1 kass_re18,kdiss_re18
	re19: FLS2()@c1 <-> MAPKKK19()@c1 kass_re19,kdiss_re19
	re20: MAPKK()@c1 <-> MAPKK_s15()@c1 kass_re20,kdiss_re20
	re21: MAPKKK_s8()@c1 <-> MAPKK()@c1 kass_re21,kdiss_re21
	re22: MAPKK_s15()@c1 <-> MAPKK2()@c1 kass_re22,kdiss_re22
	re23: MAPKK_s15()@c1 <-> MAPKK4()@c1 kass_re23,kdiss_re23
	re24: MAPKK_s15()@c1 <-> MAPKK5()@c1 kass_re24,kdiss_re24
	re25: MAPKK_s15()@c1 <-> MAPKK9()@c1 kass_re25,kdiss_re25
	re26: MAPKKK1()@c1 <-> MAPKK2()@c1 kass_re26,kdiss_re26
	re27: MAPKKK1()@c1 <-> MAPKK4()@c1 kass_re27,kdiss_re27
	re28: MAPKKK1()@c1 <-> MAPKK5()@c1 kass_re28,kdiss_re28
	re29: MAPKKK19()@c1 <-> MAPKK9()@c1 kass_re29,kdiss_re29
	re30: MAPK(_3~0)@c1 <-> MAPK_s21()@c1 kass_re30,kdiss_re30
	re31: MAPKK_s15()@c1 <-> MAPK(_3~0)@c1 kass_re31,kdiss_re31
	re32: MAPK_s21()@c1 <-> MAPK2()@c1 kass_re32,kdiss_re32
	re33: MAPK_s21()@c1 <-> MAPK(_3~3)@c1 kass_re33,kdiss_re33
	re34: MAPK_s21()@c1 <-> MAPK4()@c1 kass_re34,kdiss_re34
	re35: MAPK_s21()@c1 <-> MAPK6()@c1 kass_re35,kdiss_re35
	re36: MAPK_s21()@c1 <-> SIMK()@c1 kass_re36,kdiss_re36
	re37: MAPK_s21()@c1 <-> SAMK()@c1 kass_re37,kdiss_re37
	re38: MAPKK2()@c1 <-> MAPK2()@c1 kass_re38,kdiss_re38
	re39: MAPKK4()@c1 <-> MAPK2()@c1 kass_re39,kdiss_re39
	re40: MAPKK4()@c1 <-> MAPK(_3~3)@c1 kass_re40,kdiss_re40
	re41: MAPKK5()@c1 <-> MAPK(_3~3)@c1 kass_re41,kdiss_re41
	re42: MAPKK4()@c1 <-> MAPK6()@c1 kass_re42,kdiss_re42
	re43: MAPKK2()@c1 <-> MAPK4()@c1 kass_re43,kdiss_re43
	re44: MAPKK5()@c1 <-> MAPK6()@c1 kass_re44,kdiss_re44
	re45: WRKY1(_s29~0)@c2 <-> WRKY1(_s29~_S29)@c2 kass_re45,kdiss_re45
	re46: MYB2(Response~0,_s31~0)@c2 <-> MYB2(Response~0,_s31~_S31)@c2 kass_re46,kdiss_re46
	re47: WRKY33(_s33~0)@c2 <-> WRKY33(_s33~_S33)@c2 kass_re47,kdiss_re47
	re48: WRKY6(_s35~0)@c2 <-> WRKY6(_s35~_S35)@c2 kass_re48,kdiss_re48
	re49: MYB4(_s37~0)@c2 <-> MYB4(_s37~_S37)@c2 kass_re49,kdiss_re49
	re50: WRKY25(_s39~0)@c2 <-> WRKY25(_s39~_S39)@c2 kass_re50,kdiss_re50
	re51: WRKY12(_s41~0)@c2 <-> WRKY12(_s41~_S41)@c2 kass_re51,kdiss_re51
	re52: WRKY22(_s43~0)@c2 <-> WRKY22(_s43~_S43)@c2 kass_re52,kdiss_re52
	re53: WRKY28(_s45~0)@c2 <-> WRKY28(_s45~_S45)@c2 kass_re53,kdiss_re53
	re54: WRKY29(_s47~0)@c2 <-> WRKY29(_s47~_S47)@c2 kass_re54,kdiss_re54
	re55: MAPK2()@c1 <-> WRKY1(_s29~0)@c2 kass_re55,kdiss_re55
	re56: MAPK4()@c1 <-> WRKY1(_s29~0)@c2 kass_re56,kdiss_re56
	re57: MAPK(_3~3)@c1 <-> WRKY33(_s33~0)@c2 kass_re57,kdiss_re57
	re58: MAPK4()@c1 <-> WRKY33(_s33~0)@c2 kass_re58,kdiss_re58
	re59: MAPK4()@c1 <-> WRKY25(_s39~0)@c2 kass_re59,kdiss_re59
	re60: MAPK(_3~3)@c1 <-> WRKY22(_s43~0)@c2 kass_re60,kdiss_re60
	re61: MAPK6()@c1 <-> WRKY22(_s43~0)@c2 kass_re61,kdiss_re61
	re62: MAPK6()@c1 <-> WRKY29(_s47~0)@c2 kass_re62,kdiss_re62
	re63: MAPK6()@c1 <-> WRKY33(_s33~0)@c2 kass_re63,kdiss_re63
	re64: MAPK(_3~3)@c1 <-> WRKY29(_s47~0)@c2 kass_re64,kdiss_re64
	re65: MAPK(_3~3)@c1 <-> WRKY28(_s45~0)@c2 kass_re65,kdiss_re65
	re66: MAPK6()@c1 <-> WRKY28(_s45~0)@c2 kass_re66,kdiss_re66
	re67: MAPK(_3~3)@c1 <-> WRKY12(_s41~0)@c2 kass_re67,kdiss_re67
	re68: MAPK6()@c1 <-> MYB4(_s37~0)@c2 kass_re68,kdiss_re68
	re69: MAPK_s21()@c1 <-> MYB2(Response~0,_s31~0)@c2 kass_re69,kdiss_re69
	re70: MAPK_s21()@c1 <-> MYB44()@c2 kass_re70,kdiss_re70
	re71: MAPK_s21()@c1 <-> NAC()@c2 kass_re71,kdiss_re71
	re72: MAPK_s21()@c1 <-> AP2()@c2 kass_re72,kdiss_re72
	re73: MAPK_s21()@c1 <-> bZIP()@c2 kass_re73,kdiss_re73
	re74: MAPK4()@c1 <-> WRKY6(_s35~0)@c2 kass_re74,kdiss_re74
	re75: WRKY28(_s45~_S45)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re75,kdiss_re75
	re76: MYB2(Response~0,_s31~_S31)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re76,kdiss_re76
	re77: NAC()@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re77,kdiss_re77
	re78: bZIP()@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re78,kdiss_re78
	re79: AP2()@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re79,kdiss_re79
	re80: MYB44()@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re80,kdiss_re80
	re81: MYB4(_s37~_S37)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re81,kdiss_re81
	re82: WRKY12(_s41~_S41)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re82,kdiss_re82
	re83: WRKY6(_s35~_S35)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re83,kdiss_re83
	re84: WRKY1(_s29~_S29)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re84,kdiss_re84
	re85: WRKY29(_s47~_S47)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re85,kdiss_re85
	re86: WRKY22(_s43~_S43)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re86,kdiss_re86
	re87: WRKY25(_s39~_S39)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re87,kdiss_re87
	re88: WRKY33(_s33~_S33)@c2 <-> MYB2(Response~Response,_s31~_S31)@default kass_re88,kdiss_re88
end reaction rules
end model
