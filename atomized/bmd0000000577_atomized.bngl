###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL1506010000', 'http://identifiers.org/biomodels.db/BIOMD0000000577']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/26098366']
#@BQM_IS_DERIVED_FROM:['http://identifiers.org/biomodels.db/BIOMD0000000445']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/3702']
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0042752']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is an atomized translation of an SBML model created on 13/08/2021. The original model has 32 molecules and 64 reactions. The translated model has 29 molecules and 67 rules'
###
begin model
begin parameters
	n1 2.6
	n2 0.35
	n3 0.29
	n4 0.04
	n5 0.4
	n6 20.0
	n7 0.1
	n8 0.5
	n9 0.6
	n10 0.3
	n11 0.6
	n12 9.0
	n13 2.0
	n14 0.1
	g1 0.1
	g2 0.01
	g3 0.6
	g4 0.006
	g5 0.2
	g6 0.3
	g7 1.0
	g8 0.04
	g9 0.3
	g10 0.5
	g11 0.7
	g12 0.1
	g13 1.0
	g14 0.02
	g15 0.4
	g16 0.3
	m1 0.54
	m2 0.24
	m3 0.2
	m4 0.2
	m5 0.3
	m6 0.2
	m7 0.1
	m8 0.5
	m9 0.2
	m10 0.1
	m11 1.0
	m12 1.0
	m13 0.32
	m14 0.4
	m15 0.7
	m16 0.5
	m17 0.5
	m18 3.4
	m19 0.9
	m20 0.6
	m21 0.08
	m22 0.1
	m23 0.5
	m24 0.5
	m25 0.9
	m26 0.5
	m27 0.1
	m28 28.0
	m29 0.3
	m30 1.0
	m31 0.1
	m32 0.2
	m33 13.0
	m34 0.6
	m35 0.3
	m36 0.3
	m37 0.4
	a 2.0
	b 2.0
	c 2.0
	d 2.0
	__e__ 2.0
	f 2.0
	p1 0.13
	p2 0.27
	p3 0.1
	p4 0.5
	p5 1.0
	p6 0.2
	p7 0.3
	p8 0.6
	p9 0.8
	p10 0.54
	p11 0.5
	p12 10.0
	p13 0.1
	p14 0.14
	p15 2.0
	p16 0.62
	p17 17.0
	p18 4.0
	p19 1.0
	p20 0.1
	p21 1.0
	p22 0.5
	p23 0.37
	p24 11.0
	p25 2.0
	p26 0.3
	p27 0.8
	p28 2.0
	p29 0.1
	p30 0.9
	q1 1.0
	q2 1.56
	q3 3.0
	L 1.0
	cyclePeriod 24.0
	lightAmplitude 1.0
	twilightPeriod 0.05
	photoPeriod 12.0
	parameter_1 0.6
	parameter_2 0.4
	parameter_3 0.4
	parameter_4 0.03
	parameter_5 0.4
	parameter_6 0.1
	parameter_7 2.0
	parameter_8 2.0
	parameter_9 2.0
	parameter_10 2.0
	parameter_11 2.0
	parameter_12 0.6
	parameter_13 0.3
	parameter_14 0.5
	parameter_15 0.3
	parameter_16 0.2
	parameter_17 0.1
	parameter_18 1.0
	parameter_19 0.3
	parameter_20 0.2
	parameter_21 0.5
	parameter_24 0.5
	parameter_25 0.2
	parameter_26 0.1
	parameter_27 0.1
	parameter_28 0.2
	parameter_29 1.0
	lightOffset 0
	phase 0
	parameter_22 0
	parameter_23 0
	Kd_PRR7 0
end parameters
begin compartments
	#volume units: volume
	default 3 1.0
	def 3 1.0
	compartment_1 3 1.0 #No Name
end compartments
begin molecule types
	cG_m()
	cP()
	cE4_m()
	cZTL()
	cCOP1d()
	cL()
	cT()
	cZG()
	cE3_m()
	cEC()
	cT_m()
	cL_m()
	cE3(cg,n~N~0)
	cPP2C()
	cNI()
	cLUX()
	cLUX_m()
	cLm()
	cP9_m()
	cCOP1(c~C~0,n~N~0)
	cE4()
	cs()
	cABAR_m()
	cNI_m()
	cP9()
	cG(ce3)
	cP7_m()
	cP7()
	cSnRK2()
end molecule types
begin seed species
	@default:cABAR_m()@default 515483200000000.06 # (0.856 * 1e-09)mol/L * 6.022e23/mol *1.0L #cABAR_m #species_1
	@default:cPP2C()@default 242505940000000.03 #original 0.4027substance/volume #cPP2C #species_2
	@default:cSnRK2()@default 142239640000000.03 #original 0.2362substance/volume #cSnRK2 #species_3
	@default:cs()@default 171205460000000.0 #original 0.2843substance/volume #cs #species_4
	@def:cCOP1(c~C,n~0)@def 791471460000000.1 #original 1.3143substance/volume #cCOP1c #cCOP1c
	@def:cCOP1d()@def 244974960000000.03 #original 0.4068substance/volume #cCOP1d #cCOP1d
	@def:cCOP1(c~0,n~N)@def 508557900000000.06 #original 0.8445substance/volume #cCOP1n #cCOP1n
	@def:cE3(cg,n~0)@def 89426700000000.0 #original 0.1485substance/volume #cE3 #cE3
	@def:cE3_m()@def 174216460000000.03 #original 0.2893substance/volume #cE3_m #cE3_m
	@def:cE3(cg,n~N)@def 134531480000000.0 #original 0.2234substance/volume #cE3n #cE3n
	@def:cE4()@def 296463060000000.06 #original 0.4923substance/volume #cE4 #cE4
	@def:cE4_m()@def 152175940000000.03 #original 0.2527substance/volume #cE4_m #cE4_m
	@def:cEC()@def 85452180000000.0 #original 0.1419substance/volume #cEC #cEC
	@def:cE3(cg!175,n~0)@def.cG(ce3!175)@def 12405320000000.002 #original 0.0206substance/volume #cEG #cEG
	@def:cG(ce3)@def 8250140000000.001 #original 0.0137substance/volume #cG #cG
	@def:cG_m()@def 93581880000000.02 #original 0.1554substance/volume #cG_m #cG_m
	@def:cL()@def 301401100000000.0 #original 0.5005substance/volume #cL #cL
	@def:cLUX()@def 399138160000000.06 #original 0.6628substance/volume #cLUX #cLUX
	@def:cLUX_m()@def 59918900000000.01 #original 0.0995substance/volume #cLUX_m #cLUX_m
	@def:cL_m()@def 574980560000000.0 #original 0.9548substance/volume #cL_m #cL_m
	@def:cLm()@def 48838420000000.01 #original 0.0811substance/volume #cLm #cLm
	@def:cNI()@def 42093780000000.01 #original 0.0699substance/volume #cNI #cNI
	@def:cNI_m()@def 90450440000000.02 #original 0.1502substance/volume #cNI_m #cNI_m
	@def:cP()@def 575703172276653.0 #original 0.955999953963223substance/volume #cP #cP
	@def:cP7()@def 51126780000000.01 #original 0.0849substance/volume #cP7 #cP7
	@def:cP7_m()@def 109058420000000.02 #original 0.1811substance/volume #cP7_m #cP7_m
	@def:cP9()@def 15115220000000.002 #original 0.0251substance/volume #cP9 #cP9
	@def:cP9_m()@def 39925860000000.01 #original 0.0663substance/volume #cP9_m #cP9_m
	@def:cT()@def 52572060000000.01 #original 0.0873substance/volume #cT #cT
	@def:cT_m()@def 39504320000000.01 #original 0.0656substance/volume #cT_m #cT_m
	@def:cZG()@def 46248960000000.0 #original 0.0768substance/volume #cZG #cZG
	@def:cZTL()@def 150851100000000.0 #original 0.2505substance/volume #cZTL #cZTL
end seed species
begin observables
	Species cABAR_m_default @default:cABAR_m()@default #cABAR_m
	Species cPP2C_default @default:cPP2C()@default #cPP2C
	Species cSnRK2_default @default:cSnRK2()@default #cSnRK2
	Species cs_default @default:cs()@default #cs
	Species cCOP1c_def @def:cCOP1(c~C,n~0)@def #cCOP1c
	Species cCOP1d_def @def:cCOP1d()@def #cCOP1d
	Species cCOP1n_def @def:cCOP1(c~0,n~N)@def #cCOP1n
	Species cE3_def @def:cE3(cg,n~0)@def #cE3
	Species cE3_m_def @def:cE3_m()@def #cE3_m
	Species cE3n_def @def:cE3(cg,n~N)@def #cE3n
	Species cE4_def @def:cE4()@def #cE4
	Species cE4_m_def @def:cE4_m()@def #cE4_m
	Species cEC_def @def:cEC()@def #cEC
	Species cEG_def @def:cE3(cg!175,n~0)@def.cG(ce3!175)@def #cEG
	Species cG_def @def:cG(ce3)@def #cG
	Species cG_m_def @def:cG_m()@def #cG_m
	Species cL_def @def:cL()@def #cL
	Species cLUX_def @def:cLUX()@def #cLUX
	Species cLUX_m_def @def:cLUX_m()@def #cLUX_m
	Species cL_m_def @def:cL_m()@def #cL_m
	Species cLm_def @def:cLm()@def #cLm
	Species cNI_def @def:cNI()@def #cNI
	Species cNI_m_def @def:cNI_m()@def #cNI_m
	Species cP_def @def:cP()@def #cP
	Species cP7_def @def:cP7()@def #cP7
	Species cP7_m_def @def:cP7_m()@def #cP7_m
	Species cP9_def @def:cP9()@def #cP9
	Species cP9_m_def @def:cP9_m()@def #cP9_m
	Species cT_def @def:cT()@def #cT
	Species cT_m_def @def:cT_m()@def #cT_m
	Species cZG_def @def:cZG()@def #cZG
	Species cZTL_def @def:cZTL()@def #cZTL
end observables
begin functions
	F_PRR7() =  if((SA==1),(NPR1_SA*na_PRR7/(Kd_PRR7+NPR1_SA)+nb_PRR7),(NPR1_WT*na_PRR7/(Kd_PRR7+NPR1_WT)+nb_PRR7))
	F_LHY() =  if((SA==1),(NPR1_SA*na_LHY/(Kd_LHY+NPR1_SA)+nb_LHY),(NPR1_WT*na_LHY/(Kd_LHY+NPR1_WT)+nb_LHY))
	F_TOC1() =  if((SA==1),(NPR1_SA*na_TOC1/(Kd_TOC1+NPR1_SA)+nb_TOC1),(NPR1_WT*na_TOC1/(Kd_TOC1+NPR1_WT)+nb_TOC1))
	SA() =  if(( 1),(1),(0))
	na_PRR7() =  if((WT==1),((1-nb_PRR7)*(Kd_PRR7+1)),(0))
	na_LHY() =  if((WT==1),((1-nb_LHY)*(Kd_LHY+1)),(0))
	na_TOC1() =  if((WT==1),((1-nb_TOC1)*(Kd_TOC1+1)),(0))
	WT() =  if(( 1),(1),(0))
	Kd_LHY() =  if((LHY_on==1&&PRR7_on==1),(2.5062),(if((LHY_on==1),(1.9185),(0))))
	Kd_TOC1() =  if((LHY_on==1&&PRR7_on==1),(1.3371),(if((LHY_on==1),(1.3925),(if((PRR7_on==1),(1.0212),(1.0714))))))
	nb_PRR7() =  if((LHY_on==1&&PRR7_on==1),(0.3918),(if((PRR7_on==1),(0.2113),(1))))
	nb_LHY() =  if((LHY_on==1&&PRR7_on==1),(0.4808),(if((LHY_on==1),(0.3646),(1))))
	nb_TOC1() =  if((LHY_on==1&&PRR7_on==1),(0.5606),(if((LHY_on==1),(0.5782),(if((PRR7_on==1),(0.5502),(0.5689))))))
	LHY_on() = 1
	PRR7_on() =  if(( 1),(1),(0))
	NPR1_SA() =  if((time()>28&&time()<76),(if((time()>28&&time()<=32),(1.2393*time()-34.0718),(if((time()>32&&time()<=36),(0.5562*time()-12.2123),(if((time()>36&&time()<=40),(0.5897*time()-13.4186),(if((time()>40&&time()<=44),(1.1649*time()-36.4261),(if((time()>44&&time()<=48),(0.6696*time()-14.6331),(if((time()>48&&time()<=52),(57.4827-0.8328*time()),(if((time()>52&&time()<=56),(35.6423-0.4128*time()),(if((time()>56&&time()<=60),(112.2104-1.7801*time()),(if((time()>60&&time()<=64),(19.1551-0.2292*time()),(if((time()>64&&time()<=68),(1.2106*time()-72.9915),(if((time()>68&&time()<=72),(50.7919-0.6097*time()),(if((time()>72&&time()<=76),(119.6223-1.5657*time()),(0))))))))))))))))))))))))),(NPR1_WT))
	NPR1_WT() =  if((time()<28),(1),(if(((4)),(-0.0113*time()+0.2712*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))+0.945),(if(((4)&&(8)),(0.003*time()-0.072*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))+0.4876),(if(((8)&&(12)),(0.0774*time()-1.8576*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))-2.1904),(if(((12)&&(16)),(0.1815*time()-4.356*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))-6.3552),(if(((16)&&(20)),(0.0085*time()-0.204*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))+1.2567),(if(((20)&&(24)),(-0.2591*time()+6.2184*min(rint((time()/24-7/6)-0.5),rint((time()/24-7/6)+0.5))+14.1029),(0))))))))))))))
	D() = 1 - L
	fRate0() = 1.0*F_LHY*(L*cP_def*q1*(g1^a + (cNI_def + cP7_def + cP9_def + cT_def)^a) + g1^a*n1)/(g1^a + (cNI_def + cP7_def + cP9_def + cT_def)^a)
	fRate1() = 1.0*cL_m_def*(L*(m1 - m2) + m2)
	fRate2() = 1.0*cL_m_def*(L*p1 + p2)
	fRate3() = cL_def*m3 + cL_def^c*p3/(cL_def^c + g3^c)
	fRate4() = cL_def^c*p3/(cL_def^c + g3^c)
	fRate6() = 1.0*p7*(1 - L)*(1 - cP_def)
	fRate7() = 1.0*L*m11
	fRate8() = 1.0*parameter_2^parameter_7*(L*cEC_def*cL_def^__e__*cP_def*q3 + L*cEC_def*cP_def*g9^__e__*q3 + L*cL_def^__e__*cP_def*g8*q3 + L*cP_def*g8*g9^__e__*q3 + cL_def^__e__*g8*n4 + cL_def^__e__*g8*n7 + g8*g9^__e__*n4)/(cEC_def*cL_def^__e__*cT_def^parameter_7 + cEC_def*cL_def^__e__*parameter_2^parameter_7 + cEC_def*cT_def^parameter_7*g9^__e__ + cEC_def*g9^__e__*parameter_2^parameter_7 + cL_def^__e__*cT_def^parameter_7*g8 + cL_def^__e__*g8*parameter_2^parameter_7 + cT_def^parameter_7*g8*g9^__e__ + g8*g9^__e__*parameter_2^parameter_7)
	fRate10() = cP9_m_def*p8
	fRate11() = 1.0*cP9_def*(m13 + m22*(1 - L))
	fRate12() = F_PRR7*parameter_6^parameter_7*(cP9_def^f*n9*(cT_def^parameter_7*g10^__e__ + cT_def^parameter_7*(cL_def + cLm_def)^__e__ + g10^__e__*parameter_6^parameter_7 + parameter_6^parameter_7*(cL_def + cLm_def)^__e__) + n8*(cL_def + cLm_def)^__e__*(cP9_def^f*cT_def^parameter_7 + cP9_def^f*parameter_6^parameter_7 + cT_def^parameter_7*g11^f + g11^f*parameter_6^parameter_7))/((cP9_def^f*cT_def^parameter_7 + cP9_def^f*parameter_6^parameter_7 + cT_def^parameter_7*g11^f + g11^f*parameter_6^parameter_7)*(cT_def^parameter_7*g10^__e__ + cT_def^parameter_7*(cL_def + cLm_def)^__e__ + g10^__e__*parameter_6^parameter_7 + parameter_6^parameter_7*(cL_def + cLm_def)^__e__))
	fRate14() = cP7_m_def*p9
	fRate15() = 1.0*cP7_def*(m15 + m23*(1 - L))
	fRate16() = parameter_12^parameter_7*(cLm_def^__e__*cP7_def^b*n10 + cLm_def^__e__*cP7_def^b*n11 + cLm_def^__e__*g13^b*n10 + cP7_def^b*g12^__e__*n11)/(cLm_def^__e__*cP7_def^b*cT_def^parameter_7 + cLm_def^__e__*cP7_def^b*parameter_12^parameter_7 + cLm_def^__e__*cT_def^parameter_7*g13^b + cLm_def^__e__*g13^b*parameter_12^parameter_7 + cP7_def^b*cT_def^parameter_7*g12^__e__ + cP7_def^b*g12^__e__*parameter_12^parameter_7 + cT_def^parameter_7*g12^__e__*g13^b + g12^__e__*g13^b*parameter_12^parameter_7)
	fRate18() = cNI_m_def*p10
	fRate19() = 1.0*cNI_def*(m17 + m24*(1 - L))
	fRate20() = F_TOC1*g4*n2/(cEC_def*(cL_def/(g5*((cSnRK2_default/parameter_14)^parameter_11 + 1)))^__e__ + cEC_def + g4*(cL_def/(g5*((cSnRK2_default/parameter_14)^parameter_11 + 1)))^__e__ + g4)
	fRate22() = cT_m_def*p4
	fRate23() = cT_def*m8 + 1.0*cT_def*(cZG_def + cZTL_def*p5)*(m6 + m7*(1 - L))
	fRate24() = g6^__e__*parameter_4*parameter_5^parameter_7*parameter_8/(cEC_def*cL_def^__e__*cT_def^parameter_7 + cEC_def*cL_def^__e__*parameter_5^parameter_7 + cEC_def*cT_def^parameter_7*g6^__e__ + cEC_def*g6^__e__*parameter_5^parameter_7 + cL_def^__e__*cT_def^parameter_7*parameter_4 + cL_def^__e__*parameter_4*parameter_5^parameter_7 + cT_def^parameter_7*g6^__e__*parameter_4 + g6^__e__*parameter_4*parameter_5^parameter_7)
	fRate26() = cE4_m_def*p23
	fRate27() = -cE3n_def*cE4_def*p21*p25/(cCOP1d_def*m9 + cCOP1n_def*m10 + cLUX_def*p26 + p21) + cE3n_def*cE4_def*p25 + cE4_def*m35
	fRate28() = g16^__e__*n3/(cL_def^__e__ + g16^__e__)
	fRate30() = cE3_m_def*p16
	fRate31() = cCOP1c_def*m9
	fRate33() = cCOP1d_def*cE3n_def*m9 + cCOP1n_def*cE3n_def*m10 - cE3n_def*cE4_def*p21*p25/(cCOP1d_def*m9 + cCOP1n_def*m10 + cLUX_def*p26 + p21) + cE3n_def*cE4_def*p25 + cE3n_def*cG_def*p17*p28/(cE3n_def*p17 + m19 + p29)
	fRate34() = g2*g6^__e__*n13*parameter_3^parameter_7/(cEC_def*cL_def^__e__*cT_def^parameter_7 + cEC_def*cL_def^__e__*parameter_3^parameter_7 + cEC_def*cT_def^parameter_7*g6^__e__ + cEC_def*g6^__e__*parameter_3^parameter_7 + cL_def^__e__*cT_def^parameter_7*g2 + cL_def^__e__*g2*parameter_3^parameter_7 + cT_def^parameter_7*g2*g6^__e__ + g2*g6^__e__*parameter_3^parameter_7)
	fRate36() = cLUX_m_def*p27
	fRate37() = cE3n_def*cE4_def*cLUX_def*p25*p26/(cCOP1d_def*m9 + cCOP1n_def*m10 + cLUX_def*p26 + p21) + cLUX_def*m36
	fRate39() = 1.0*cCOP1c_def*m27*(L*p15 + 1)
	fRate41() = 1.0*cCOP1n_def*m27*(L*p15 + 1)
	fRate42() = 1.0*L*cCOP1n_def*cP_def*n6 + cCOP1n_def*n14
	fRate43() = 1.0*cCOP1d_def*m31*(m33*(1 - L) + 1)
	fRate44() = 1.0*parameter_1^parameter_7*(L*cEC_def*cL_def^__e__*cP_def*q2 + L*cEC_def*cP_def*g15^__e__*q2 + L*cL_def^__e__*cP_def*g14*q2 + L*cP_def*g14*g15^__e__*q2 + g14*g15^__e__*n12)/(cEC_def*cL_def^__e__*cT_def^parameter_7 + cEC_def*cL_def^__e__*parameter_1^parameter_7 + cEC_def*cT_def^parameter_7*g15^__e__ + cEC_def*g15^__e__*parameter_1^parameter_7 + cL_def^__e__*cT_def^parameter_7*g14 + cL_def^__e__*g14*parameter_1^parameter_7 + cT_def^parameter_7*g14*g15^__e__ + g14*g15^__e__*parameter_1^parameter_7)
	fRate46() = cG_m_def*p11
	fRate47() = cG_def*m19 - cG_def*p28*p29/(cE3n_def*p17 + m19 + p29) + cG_def*p28
	fRate48() = 1.0*L*cG_def*cZTL_def*p12 - cZG_def*p13*(1 - L)
	fRate53() = cCOP1c_def*cEG_def*m10 + cEG_def*p18 - parameter_26*(cE3n_def*cG_def*p17*p28/(cE3n_def*p17 + m19 + p29) + cEG_def*p18)/(cCOP1d_def*m9 + cCOP1n_def*m10 + parameter_26)
	fRate54() = cE3n_def*cE4_def*cLUX_def*p25*p26/(cCOP1d_def*m9 + cCOP1n_def*m10 + cLUX_def*p26 + p21)
	fRate55() = cCOP1d_def*cEC_def*m9 + 1.0*cCOP1n_def*cEC_def*m10 + cEC_def*m32*(L*p24*(cG_def*p28/(cE3n_def*p17 + m19 + p29) + (cE3n_def*cG_def*p17*p28/(cE3n_def*p17 + m19 + p29) + cEG_def*p18)/(cCOP1d_def*m9 + cCOP1n_def*m10 + parameter_26))^d/(g7^d + (cG_def*p28/(cE3n_def*p17 + m19 + p29) + (cE3n_def*cG_def*p17*p28/(cE3n_def*p17 + m19 + p29) + cEG_def*p18)/(cCOP1d_def*m9 + cCOP1n_def*m10 + parameter_26))^d) + 1)
	fRate56() = 1.0*cL_def^__e__*parameter_13^parameter_7*parameter_24/(1.0*cL_def^__e__*cT_def^parameter_7 + 1.0*cL_def^__e__*parameter_13^parameter_7 + 1.0*cT_def^parameter_7*parameter_17^__e__ + 1.0*parameter_13^parameter_7*parameter_17^__e__)
	fRate57() = 1.0*m37
	fRate58() = 1.0*parameter_16^parameter_9*parameter_28/(1.0*parameter_16^parameter_9 + 1.0*(0.5*cABAR_m_default + 0.5*parameter_18 + 0.5*parameter_29 - 0.707106781186548*(0.5*cABAR_m_default^2 + cABAR_m_default*parameter_18 - cABAR_m_default*parameter_29 + 0.5*parameter_18^2 + parameter_18*parameter_29 + 0.5*parameter_29^2)^0.5)^parameter_9)
	fRate59() = 1.0*parameter_20
	fRate60() = 1.0*cPP2C_default*m30
	fRate61() = 1.0*parameter_27
	fRate62() = 1.0*parameter_15^parameter_10*(1 - cs_default)*(L*parameter_21 + parameter_25)/(1.0*cSnRK2_default^parameter_10 + 1.0*parameter_15^parameter_10)
	fRate63() = 1.0*m29
end functions
begin reaction rules
	cL_m_trscr: 0  -> cL_m()@def fRate0() #Modifiers(cNI, cP, cP7, cP9, cT, cNI, cP, cP7, cP9, cT)
	cL_m_degr_reactants_0: 0  -> cL_m()@def -1*(fRate1()) #Modifiers(cL_m)
	cL_trsl: 0  -> cL()@def fRate2() #Modifiers(cL_m, cL_m)
	cL_degr_reactants_0: 0  -> cL()@def -1*(fRate3()) #Modifiers(cL)
	cL_modif: 0  -> cLm()@def fRate4() #Modifiers(cL, cL)
	cLm_degr: cLm()@def -> 0  m4 #Modifiers(cLm)
	cP_trsl_products_0: 0  -> cP()@def fRate6() #Modifiers(cP)
	cP_degr: cP()@def -> 0  fRate7() #Modifiers(cP)
	cP9_m_trscr: 0  -> cP9_m()@def fRate8() #Modifiers(cP, cL, cEC, cT, cEC, cL, cP, cT)
	cP9_m_degr: cP9_m()@def -> 0  m12 #Modifiers(cP9_m)
	cP9_trsl: 0  -> cP9()@def fRate10() #Modifiers(cP9_m, cP9_m)
	cP9_degr_reactants_0: 0  -> cP9()@def -1*(fRate11()) #Modifiers(cP9)
	cP7_m_trscr: 0  -> cP7_m()@def fRate12() #Modifiers(cL, cLm, cP9, cT, cL, cLm, cP9, cT)
	cP7_m_degr: cP7_m()@def -> 0  m14 #Modifiers(cP7_m)
	cP7_trsl: 0  -> cP7()@def fRate14() #Modifiers(cP7_m, cP7_m)
	cP7_degr_reactants_0: 0  -> cP7()@def -1*(fRate15()) #Modifiers(cP7)
	cNI_m_trscr: 0  -> cNI_m()@def fRate16() #Modifiers(cT, cLm, cP7, cLm, cP7, cT)
	cNI_m_degr: cNI_m()@def -> 0  m16 #Modifiers(cNI_m)
	cNI_trsl: 0  -> cNI()@def fRate18() #Modifiers(cNI_m, cNI_m)
	cNI_degr_reactants_0: 0  -> cNI()@def -1*(fRate19()) #Modifiers(cNI)
	cT_m_trscr: 0  -> cT_m()@def fRate20() #Modifiers(cEC, cL, species_3, cEC, cL, species_3)
	cT_m_degr: cT_m()@def -> 0  m5 #Modifiers(cT_m)
	cT_trsl: 0  -> cT()@def fRate22() #Modifiers(cT_m, cT_m)
	cT_degr_reactants_0: 0  -> cT()@def -1*(fRate23()) #Modifiers(cZTL, cZG, cT, cZG, cZTL)
	cE4_m_trscr: 0  -> cE4_m()@def fRate24() #Modifiers(cT, cEC, cL, cEC, cL, cT)
	cE4_m_degr: cE4_m()@def -> 0  m34 #Modifiers(cE4_m)
	cE4_trsl: 0  -> cE4()@def fRate26() #Modifiers(cE4_m, cE4_m)
	cE4_degr_reactants_0: 0  -> cE4()@def -1*(fRate27()) #Modifiers(cE3n, cLUX, cCOP1d, cCOP1n, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cE3_m_trscr: 0  -> cE3_m()@def fRate28() #Modifiers(cL, cL)
	cE3_m_degr: cE3_m()@def -> 0  m26 #Modifiers(cE3_m)
	cE3_trsl: 0  -> cE3(cg,n~0)@def fRate30() #Modifiers(cE3_m, cE3_m)
	cE3_degr: cE3(cg,n~0)@def -> 0  fRate31() #Modifiers(cCOP1c, cCOP1c, cE3)
	cE3n_import: cE3(cg,n~0)@def <-> cE3(cg,n~N)@def p19,p20 #Modifiers(cE3, cE3n)
	cE3n_degr_reactants_0: 0  -> cE3(cg,n~N)@def -1*(fRate33()) #Modifiers(cCOP1n, cCOP1d, cE4, cLUX, cG, cE3n, cCOP1d, cCOP1n, cE3n, cE4, cG, cLUX)
	cLUX_m_trscr: 0  -> cLUX_m()@def fRate34() #Modifiers(cT, cEC, cL, cEC, cL, cT)
	cLUX_m_degr: cLUX_m()@def -> 0  m34 #Modifiers(cLUX_m)
	cLUX_trsl: 0  -> cLUX()@def fRate36() #Modifiers(cLUX_m, cLUX_m)
	cLUX_degr_reactants_0: 0  -> cLUX()@def -1*(fRate37()) #Modifiers(cE4, cE3n, cCOP1d, cCOP1n, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cCOP1c_trsl: 0  -> cCOP1(c~C,n~0)@def n5
	cCOP1c_degr_reactants_0: 0  -> cCOP1(c~C,n~0)@def -1*(fRate39()) #Modifiers(cCOP1c)
	cCOP1n_import: cCOP1(c~C,n~0)@def -> cCOP1(c~0,n~N)@def p6 #Modifiers(cCOP1c)
	cCOP1n_degr_reactants_0: 0  -> cCOP1(c~0,n~N)@def -1*(fRate41()) #Modifiers(cCOP1n)
	cCOP1d_activ_reactants_0: 0  -> cCOP1(c~0,n~N)@def -1*(fRate42()) #Modifiers(cP, cCOP1n, cP)
	cCOP1d_activ_products_0: 0  -> cCOP1d()@def fRate42() #Modifiers(cP, cCOP1n, cP)
	cCOP1d_degr_reactants_0: 0  -> cCOP1d()@def -1*(fRate43()) #Modifiers(cCOP1d)
	cG_m_trscr: 0  -> cG_m()@def fRate44() #Modifiers(cT, cP, cEC, cL, cEC, cL, cP, cT)
	cG_m_degr: cG_m()@def -> 0  m18 #Modifiers(cG_m)
	cG_trsl: 0  -> cG(ce3)@def fRate46() #Modifiers(cG_m, cG_m)
	cG_degr_reactants_0: 0  -> cG(ce3)@def -1*(fRate47()) #Modifiers(cE3n, cE3n, cG)
	cG_cZTL_assoc_reactants_0: 0  -> cG(ce3)@def -1*(fRate48()) #Modifiers(cG, cZG, cZTL)
	cG_cZTL_assoc_reactants_1: 0  -> cZTL()@def -1*(fRate48()) #Modifiers(cG, cZG, cZTL)
	cG_cZTL_assoc_products_0: 0  -> cZG()@def fRate48() #Modifiers(cG, cZG, cZTL)
	cZTL_trsl: 0  -> cZTL()@def p14
	cZTL_degr: cZTL()@def -> 0  m20 #Modifiers(cZTL)
	cZG_degr: cZG()@def -> 0  m21 #Modifiers(cZG)
	cG_cE3_assoc: cE3(cg,n~0)@def + cG(ce3)@def -> cE3(cg!175,n~0)@def.cG(ce3!175)@def p17 #Modifiers(cE3, cG)
	cEG_degr_reactants_0: 0  -> cE3(cg!175,n~0)@def.cG(ce3!175)@def -1*(fRate53()) #Modifiers(cCOP1c, cE3n, cG, cCOP1n, cCOP1d, cCOP1c, cCOP1d, cCOP1n, cE3n, cEG, cG)
	cEC_form: 0  -> cEC()@def fRate54() #Modifiers(cLUX, cE4, cE3n, cCOP1d, cCOP1n, cCOP1d, cCOP1n, cE3n, cE4, cLUX)
	cEC_degr_reactants_0: 0  -> cEC()@def -1*(fRate55()) #Modifiers(cCOP1n, cCOP1d, cG, cE3n, cEG, cCOP1d, cCOP1n, cE3n, cEC, cEG, cG)
	reaction_1: 0  -> cABAR_m()@default fRate56() #Modifiers(cT, cL, cL, cT)
	reaction_2: cABAR_m()@default -> 0  fRate57() #Modifiers(species_1)
	reaction_3: 0  -> cPP2C()@default fRate58() #Modifiers(species_1, species_1)
	reaction_4: cPP2C()@default -> 0  fRate59() #Modifiers(species_2)
	reaction_5: cSnRK2()@default -> 0  fRate60() #Modifiers(species_2, species_2, species_3)
	reaction_6: 0  -> cSnRK2()@default fRate61()
	reaction_7_products_0: 0  -> cs()@default fRate62() #Modifiers(species_4, species_3, species_3, species_4)
	reaction_8: cs()@default -> 0  fRate63() #Modifiers(species_4)
end reaction rules
end model
