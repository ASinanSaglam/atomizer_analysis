###
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/23098257']
#@BQB_IS_VERSION_OF:['http://identifiers.org/ncit/C17214']
#@BQB_OCCURS_IN:['http://identifiers.org/omit/0003748']
#@BQB_HAS_PROPERTY:['http://identifiers.org/mamo/MAMO_0000046', 'http://identifiers.org/ncit/C128419']
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000950', 'http://identifiers.org/biomodels.db/MODEL1805230002']
#@creatorEmail:'mroberts@ebi.ac.uk'
#@creatorName:'Roberts Matthew Grant'
#@notes:'This is an atomized translation of an SBML model created on 14/08/2021. The original model has 7 molecules and 0 reactions. The translated model has 7 molecules and 7 rules'
###
begin model
begin parameters
	Season_Dummy_Variable 0
end parameters
begin compartments
	#volume units: volume
	Cattle 3 1.0
	Vector 3 1.0
end compartments
begin molecule types
	S_v()
	A_h()
	I_v()
	S_h()
	I_h()
	R_h()
	E_v()
end molecule types
begin seed species
	@Vector:I_v() 6.022e+20 #original 1.0substance/volume #I_v #I_v
	@Cattle:S_h()() if(((0)==0),(1000),(1000)) #S_h
	@Vector:S_v()() if(((0)==0),(19999),(3999)) #S_v
end seed species
begin observables
	Species S_h_Cattle @Cattle:S_h() #S_h
	Species A_h_Cattle @Cattle:A_h() #A_h
	Species I_h_Cattle @Cattle:I_h() #I_h
	Species R_h_Cattle @Cattle:R_h() #R_h
	Species S_v_Vector @Vector:S_v() #S_v
	Species E_v_Vector @Vector:E_v() #E_v
	Species I_v_Vector @Vector:I_v() #I_v
end observables
begin functions
	beta_vh() =  if((Season_Dummy_Variable==0),(0.7),(0.7))
	N_v() = E_v_Vector + I_v_Vector + S_v_Vector
	sigma_v() =  if((Season_Dummy_Variable==0),(0.33),(0.25))
	sigma_h() =  if((Season_Dummy_Variable==0),(19),(19))
	N_h() = A_h_Cattle + I_h_Cattle + R_h_Cattle + S_h_Cattle
	beta_tilde_vh() =  if((Season_Dummy_Variable==0),(0.3),(0.3))
	lambda_v() = N_h*sigma_h*sigma_v*(A_h_Cattle*beta_tilde_vh/N_h + I_h_Cattle*beta_vh/N_h)/(N_h*sigma_h + N_v*sigma_v)
	v_v() =  if((Season_Dummy_Variable==0),(1/14),(1/14))
	M0() =  if((Season_Dummy_Variable==0),(20000),(4000))
	psi_v() =  if((Season_Dummy_Variable==0),(0.1),(0.1))
	u_v() =  if((Season_Dummy_Variable==0),(1/20),(1/14))
	arRateI_v() = E_v_Vector*v_v + I_v_Vector*M0*psi_v*u_v/N_v - I_v_Vector*u_v
	arRateS_v() = M0*u_v*(-I_v_Vector*psi_v + N_v)/N_v - S_v_Vector*lambda_v - S_v_Vector*u_v
	beta_hv() =  if((Season_Dummy_Variable==0),(0.21),(0.21))
	lambda_h() = I_v_Vector*beta_hv*sigma_h*sigma_v/(N_h*sigma_h + N_v*sigma_v)
	gamma_h() =  if((Season_Dummy_Variable==0),(1/4),(1/4))
	u_h() =  if((Season_Dummy_Variable==0),(1/2190),(1/2190))
	theta_h() =  if((Season_Dummy_Variable==0),(0.4),(0.4))
	delta_h() =  if((Season_Dummy_Variable==0),(0.1),(0.1))
	arRateI_h() = -I_h_Cattle*(delta_h + gamma_h + u_h) + S_h_Cattle*lambda_h*(1 - theta_h)
	gamma_tilde_h() =  if((Season_Dummy_Variable==0),(1/4),(1/4))
	arRateA_h() = -A_h_Cattle*(gamma_tilde_h + u_h) + S_h_Cattle*lambda_h*theta_h
	arRateE_v() = -E_v_Vector*(u_v + v_v) + S_v_Vector*lambda_v
	arRateR_h() = A_h_Cattle*gamma_tilde_h + I_h_Cattle*gamma_h - R_h_Cattle*u_h
	C0() =  if((Season_Dummy_Variable==0),(1000),(1000))
	arRateS_h() = C0*u_h - S_h_Cattle*lambda_h - S_h_Cattle*u_h
	Total_Infected_Cattle() = A_h_Cattle + I_h_Cattle
	gamma_e() =  if((Season_Dummy_Variable==0),(0.2),(0.1))
end functions
begin reaction rules
	0  -> S_h()@Cattle arRateS_h #rateLaw
	0  -> A_h()@Cattle arRateA_h #rateLaw
	0  -> I_h()@Cattle arRateI_h #rateLaw
	0  -> R_h()@Cattle arRateR_h #rateLaw
	0  -> S_v()@Vector arRateS_v #rateLaw
	0  -> E_v()@Vector arRateE_v #rateLaw
	0  -> I_v()@Vector arRateI_v #rateLaw
end reaction rules
end model
