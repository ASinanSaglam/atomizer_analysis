###
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000276', 'http://identifiers.org/biomodels.db/MODEL1011170001']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/20406649']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/9606']
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0071107']
#@BQB_HAS_PROPERTY:['http://identifiers.org/doid/DOID:10575']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is an atomized translation of an SBML model created on 13/08/2021. The original model has 3 molecules and 0 reactions. The translated model has 2 molecules and 2 rules'
###
begin model
begin parameters
	m1 112.52
	m2 15.0
	beta 1000000.0
	R 1.2162
	lambda_1 0.0125
	lambda_2 0.5595
	Ca0 1.255
	Ca1 0.1817
	t0 575.0
	alpha 0.0442
	x1_n 490.78
	x2_n 6.629
	x2_min 0.6697
	x2_max 14.043
	Ca0_baseline 1.255
	Ca_in_Plasma_Plasma_pool 7.34684e+23 # 1.22mol/L * 6.022e23/mol *1.0L
	Ca_in_Plasma 7.34684e+23 # 1.22mol/L * 6.022e23/mol *1.0L
end parameters
begin compartments
	#volume units: L
	PTG_pool 3 1.0
	Plasma_pool 3 1.0
end compartments
begin molecule types
	PTH_in_PTG()
	PTH_in_Plasma()
end molecule types
begin seed species
end seed species
begin observables
	Species PTH_in_PTG_PTG_pool @PTG_pool:PTH_in_PTG() #PTH_in_PTG
	Species PTH_in_Plasma_Plasma_pool @Plasma_pool:PTH_in_Plasma() #PTH_in_Plasma
end observables
begin functions
	Ca_in_Plasma_ar() =  if((time()<t0),(Ca0),(Ca0-Ca1*(1-exp(-alpha*(-t0+time())))))
	m_Ca() = m1/(exp(-beta*(-Ca_in_Plasma_ar + R)) + 1) + m2
	k() = lambda_1*x1_n + lambda_2*x2_n
	A() = lambda_1*lambda_2*x2_max/(k - lambda_2*x2_max)
	B() = lambda_1*lambda_2*x2_min/(k - lambda_2*x2_min)
	S() = Ca0_baseline*((-B*x1_n + lambda_2*x2_n)/(A*x1_n - lambda_2*x2_n))^(1/m_Ca)
	lambda_Ca() = B + (A - B)/((Ca_in_Plasma_ar/S)^m_Ca + 1)
	arRatex1() = -PTH_in_PTG_PTG_pool*lambda_1 - PTH_in_PTG_PTG_pool*lambda_Ca + k
	arRatex2() = PTH_in_PTG_PTG_pool*lambda_Ca - PTH_in_Plasma_Plasma_pool*lambda_2
end functions
begin reaction rules
	0  -> PTH_in_PTG()@PTG_pool arRatex1 #rateLaw
	0  -> PTH_in_Plasma()@Plasma_pool arRatex2 #rateLaw
end reaction rules
end model
