###
#@BQM_IS:['http://identifiers.org/biomodels.db/BIOMD0000000373', 'http://identifiers.org/biomodels.db/MODEL1006230042']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/15347584']
#@BQM_IS_DERIVED_FROM:['http://identifiers.org/pubmed/15294427']
#@BQB_OCCURS_IN:['http://identifiers.org/bto/BTO:0000783']
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0006096', 'http://identifiers.org/go/GO:0061469', 'http://identifiers.org/go/GO:0044342']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/9606']
#@BQB_HAS_PROPERTY:['http://identifiers.org/doid/DOID:9351']
#@creatorEmail:'ajmera@ebi.ac.uk'
#@creatorName:'Ajmera Ishan'
#@notes:'This is a plain translation of an SBML model created on 13/08/2021. The original model has 7 molecules and 0 reactions. The translated model has 7 molecules and 7 rules'
###
begin model
begin parameters
	Cm 5300.0
	gK 2700.0
	gKCa 600.0
	kd 0.5
	gCa 1000.0
	VCa 25.0
	taun 20.0
	fcyt 0.01
	fer 0.01
	sigmaV 31.0
	pleak 0.0002
	Kserca 0.4
	lambdaer 1.0
	epser 1.0
	alpha 4.5e-06
	kpmca 0.2
	Rgk 0.2
	atot 3000.0
	pfkbas 0.06
	lambda 0.005
	bottom1 1.0
	k1 30.0
	k2 1.0
	k3 50000.0
	k4 1000.0
	cat 2.0
	famp 0.02
	fatp 20.0
	ffbp 0.2
	fbt 20.0
	fmt 20.0
	VK -75.0
	gkatpbar 25000.0
	kdd 17.0
	ktd 26.0
	ktt 1.0
	taua 300000.0
	r1 0.35
	r 1.0
	vg 2.2
	kg 10.0
	topa1 0
end parameters
begin molecule types
	V()
	fbp()
	cer()
	c()
	adp()
	g6p()
	n()
end molecule types
begin seed species
	n() 0.025 #n #n
	c() 0.25 #c #c
	cer() 185.0 #cer #cer
	g6p() 200.0 #g6p #g6p
	fbp() 40.0 #fbp #fbp
	adp() 780.0 #adp #adp
end seed species
begin observables
	Species V V() #V
	Species n n() #n
	Species c c() #c
	Species cer cer() #cer
	Species g6p g6p() #g6p
	Species fbp fbp() #fbp
	Species adp adp() #adp
end observables
begin functions
	minf() = 1/(exp(-V/12 - 5/3) + 1)
	ICa() = gCa*minf*(V - VCa)
	IK() = gK*n*(V - VK)
	IKCa() = gKCa*(V - VK)/(1 + kd^2/c^2)
	mgadp() = 0.165*adp
	adp3m() = 0.135*adp
	rad() = sqrt(abs(-4*adp^2 + (adp - atot)^2))
	atp() = -0.5*adp + 0.5*atot + 0.5*rad
	atp4m() = 0.05*atp
	bottomo() = (1 + mgadp/kdd)^2*(adp3m/ktd + atp4m/ktt + 1)
	topo() = 0.08 + 0.16*mgadp/kdd + 0.89*mgadp^2/kdd^2
	katpo() = topo/bottomo
	IKATP() = gkatpbar*katpo*(V - VK)
	arRateV() = (-ICa - IK - IKATP - IKCa)/Cm
	f6p() = 0.3*g6p
	amp() = adp^2/atp
	weight15() = amp*f6p^2*fbp/(famp*ffbp*k1*k2*k3)
	topb() = weight15
	weight14() = amp*atp^2*fbp/(fbt*fmt*k1*k2*k4)
	weight12() = amp*atp^2*f6p^2/(famp*fatp*fmt*k1*k3*k4)
	weight11() = amp*f6p^2/(famp*k1*k3)
	weight6() = atp^2*fbp/(fbt*k2*k4)
	weight3() = f6p^2/k3
	weight2() = atp^2/k4
	bottom2() = bottom1 + weight2
	bottom3() = bottom2 + weight3
	weight4() = atp^2*f6p^2/(fatp*k3*k4)
	bottom4() = bottom3 + weight4
	weight5() = fbp/k2
	bottom5() = bottom4 + weight5
	bottom6() = bottom5 + weight6
	weight7() = f6p^2*fbp/(ffbp*k2*k3)
	bottom7() = bottom6 + weight7
	weight8() = atp^2*f6p^2*fbp/(fatp*fbt*ffbp*k2*k3*k4)
	bottom8() = bottom7 + weight8
	weight9() = amp/k1
	bottom9() = bottom8 + weight9
	weight10() = amp*atp^2/(fmt*k1*k4)
	bottom10() = bottom9 + weight10
	bottom11() = bottom10 + weight11
	bottom12() = bottom11 + weight12
	weight13() = amp*fbp/(k1*k2)
	bottom13() = bottom12 + weight13
	bottom14() = bottom13 + weight14
	bottom15() = bottom14 + weight15
	weight16() = amp*atp^2*f6p^2*fbp/(famp*fatp*fbt*ffbp*fmt*k1*k2*k3*k4)
	bottom16() = bottom15 + weight16
	topa2() = topa1
	topa3() = topa2 + weight3
	topa4() = topa3 + weight4
	topa5() = topa4
	topa6() = topa5
	topa7() = topa6 + weight7
	topa8() = topa7 + weight8
	topa9() = topa8
	topa10() = topa9
	topa11() = topa10 + weight11
	topa12() = topa11 + weight12
	topa13() = topa12
	topa14() = topa13
	topa15() = topa14
	topa16() = topa15 + weight16
	pfk() = (cat*pfkbas*topa16 + cat*topb)/bottom16
	rgpdh() = 0.2*sqrt(abs(fbp))
	y() = rgpdh*vg/(kg + rgpdh)
	fback() = r + y
	arRateadp() = (-adp*exp(fback*(-c/r1 + 1)) + atp)/taua
	Jmem() = -ICa*alpha - c*kpmca
	Jleak() = pleak*(-c + cer)
	Jserca() = Kserca*c
	Jer() = epser*(Jleak - Jserca)/lambdaer
	arRatec() = fcyt*(Jer + Jmem)
	arRatecer() = -Jer*fer*sigmaV
	ninf() = 1/(exp(-V/5 - 16/5) + 1)
	arRaten() = (-n + ninf)/taun
	ratio() = atp/adp
	arRatefbp() =  lambda*(pfk -0.5*rgpdh)
	arRateg6p() =  lambda*(Rgk -pfk)
end functions
begin reaction rules
	0  -> V() arRateV #rateLaw
	0  -> n() arRaten #rateLaw
	0  -> c() arRatec #rateLaw
	0  -> cer() arRatecer #rateLaw
	0  -> g6p() arRateg6p #rateLaw
	0  -> fbp() arRatefbp #rateLaw
	0  -> adp() arRateadp #rateLaw
end reaction rules
end model
