###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL0913194523', 'http://identifiers.org/biomodels.db/BIOMD0000000400']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/17693463']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/10090']
#@BQB_IS_VERSION_OF:['http://identifiers.org/fma/FMA:83108', 'http://identifiers.org/go/GO:0003015', 'http://identifiers.org/go/GO:0003300', 'http://identifiers.org/go/GO:0048016']
#@BQB_HAS_PROPERTY:['http://identifiers.org/mamo/MAMO_0000046']
#@creatorEmail:'m.cooling@aukland.ac.nz'
#@creatorName:'Cooling Mike'
#@notes:'This is a plain translation of an SBML model created on 13/08/2021. The original model has 13 molecules and 0 reactions. The translated model has 13 molecules and 13 rules'
###
begin model
begin parameters
	Ls 0.1
	ts 30.0
	PIP2 4000.0
	kf1 0.0003
	Kd1 3e-05
	kf2 0.000275
	Kd2 27500.0
	kf3 1.0
	kr3 0.001
	kf4 0.3
	Kd4 3e-05
	kf5 0.0004
	kf6 1.0
	kf7 0.15
	kf8 0.0167
	kr8 0.0167
	kf9 0.0042
	kr9 1.0
	kf10 0.042
	kr10 1.0
	kf11 0.0334
	Kd11 0.1
	kf12 6.0
	kf13 6.0
	kf14 0.444
	Km14 19.8
	kf15 3.8
	Km15 5.0
	kf16 1.25
	Vc 2550.0
	Rpc 4.61
end parameters
begin molecule types
	Pcg()
	Gd()
	Ca()
	Rg()
	Rlg()
	Pc()
	Rlgp()
	P()
	R()
	IP3()
	Rl()
	Gt()
	Pg()
end molecule types
begin seed species
	Gd() 6.022e+27 # 10000.0mol/L * 6.022e23/mol *1.0L #Gd #Gd
	R() 8.370580000000001e+24 #original 13.9mol/L #R #R
	Rg() 3.0471319999999997e+24 #original 5.06mol/L #Rg #Rg
	IP3() 9.033e+21 #original 0.015mol/L #IP3 #IP3
	Pc() 5.473998e+24 #original 9.09mol/L #Pc #Pc
	P() 5.473998000000001e+25 #original 90.9mol/L #P #P
	Ca() 6.022000000000001e+22 #original 0.1mol/L #Ca #Ca
end seed species
begin observables
	Species Gd Gd() #Gd
	Species Gt Gt() #Gt
	Species R R() #R
	Species Rl Rl() #Rl
	Species Rg Rg() #Rg
	Species Rlg Rlg() #Rlg
	Species Rlgp Rlgp() #Rlgp
	Species IP3 IP3() #IP3
	Species Pc Pc() #Pc
	Species Pcg Pcg() #Pcg
	Species P P() #P
	Species Pg Pg() #Pg
	Species Ca Ca() #Ca
end observables
begin functions
	J13() = Pg*kf13
	kr2() = Kd2*kf2
	J2() = Gd*R*kf2 - Rg*kr2
	J7() = Gt*kf7
	J12() = Pcg*kf12
	J3() = Gd*Rl*kf3 - Rlg*kr3
	arRateGd() = J12 + J13 - J2 - J3 + J7
	kr4() = Kd4*kf4
	L() =  if((time()<ts+0.15&&time()>=ts),(Ls/(exp(-80*time()+80*ts+4.0)+1)),if((time()>=ts+0.15),(Ls),(0)))
	J4() = L*Rg*kf4 - Rlg*kr4
	J5() = Rlg*kf5
	J6() = Rlg*kf6
	arRateRlg() = J3 + J4 - J5 - J6
	J9() = Gt*P*kf9 - Pg*kr9
	J10() = Gt*Pc*kf10 - Pcg*kr10
	arRateGt() = -J10 + J6 - J7 - J9
	Cp() = 1/(Rpc*Vc)
	Cc() = 0.00166057788110262/Vc
	Cpc() = Cc/Cp
	J15() = PIP2*Pcg*kf15/(PIP2 + Km15/Cpc)
	J16() = IP3*kf16
	J14() = PIP2*Pc*kf14/(PIP2 + Km14/Cpc)
	arRateIP3() = Cpc*(J14 + J15) - J16
	kr1() = Kd1*kf1
	J1() = L*R*kf1 - Rl*kr1
	arRateRl() = J1 - J3 + J6
	J8() = Ca*P*kf8 - Pc*kr8
	kr11() = Kd11*kf11
	J11() = Ca*Pg*kf11 - Pcg*kr11
	arRateCa() = -Cpc*(J11 + J8)
	arRatePcg() = J10 + J11 - J12
	arRatePc() = -J10 + J12 + J8
	arRatePg() = -J11 - J13 + J9
	arRateP() = J13 - J8 - J9
	arRateRg() = J2 - J4
	arRateR() = -J1 - J2
	arRateRlgp() = J5
end functions
begin reaction rules
	0  -> P() arRateP #rateLaw
	0  -> Pg() arRatePg #rateLaw
	0  -> Pc() arRatePc #rateLaw
	0  -> Pcg() arRatePcg #rateLaw
	0  -> IP3() arRateIP3 #rateLaw
	0  -> Gd() arRateGd #rateLaw
	0  -> Gt() arRateGt #rateLaw
	0  -> Ca() arRateCa #rateLaw
	0  -> R() arRateR #rateLaw
	0  -> Rl() arRateRl #rateLaw
	0  -> Rg() arRateRg #rateLaw
	0  -> Rlgp() arRateRlgp #rateLaw
	0  -> Rlg() arRateRlg #rateLaw
end reaction rules
end model
