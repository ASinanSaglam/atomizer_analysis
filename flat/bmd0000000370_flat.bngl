###
#@BQM_IS:['http://identifiers.org/biomodels.db/MODEL1111030000', 'http://identifiers.org/biomodels.db/BIOMD0000000370']
#@BQM_IS_DESCRIBED_BY:['http://identifiers.org/pubmed/21288956']
#@BQM_IS_DERIVED_FROM:['http://identifiers.org/biomodels.db/BIOMD0000000409']
#@BQB_HAS_TAXON:['http://identifiers.org/taxonomy/4932']
#@BQB_IS_VERSION_OF:['http://identifiers.org/obo.go/GO:0000278', 'http://identifiers.org/cco/CCO:P0000038']
#@creatorEmail:'viji@ebi.ac.uk'
#@creatorName:'Chelliah Vijayalakshmi'
#@notes:'This is a plain translation of an SBML model created on 13/08/2021. The original model has 32 molecules and 0 reactions. The translated model has 24 molecules and 24 rules'
###
begin model
begin parameters
	PPT_1 1.0
	kpp_1 0.1
	ki_1 40.0
	kdclb2_1 0.02
	kdclb2_2 0.1
	kdclb2_3 0.4
	kdclb5_1 0.01
	kdclb5_2 1.0
	kdsic_1 2.0
	kdsic_2 2.0
	kdsic_3 0.04
	kdsic_4 1.5
	kdcdh_1 0.03
	kdcdh_2 0.3
	kpcdh_1 0.001
	kpcdh_2 0.04
	kpcdh_3 0.75
	kaswi_1 0.2
	kaswi_2 1.0
	kiswi_1 0.01
	kiswi_2 0.5
	kiswi_3 0.75
	kd_1 0.1
	kd_2 0.45
	Jnet_1 0.05
	Net1T_1 1.0
	kp_3 0.2
	kp_4 3.0
	kexp_1 0.01
	kexp_2 20.0
	ksclb2_1 0.015
	ksclb2_2 0.005
	ksclb5_1 0.01
	ksclb5_2 0.002
	kscln_1 0.1
	kscln_2 0.01
	kdcln_1 0.25
	ks20_1 0.05
	ks20_2 0.001
	kd20_1 0.1
	kd20_2 1.0
	Jcdh_1 0.01
	kssic_1 0.2
	kssic_2 0.004
	kasic2_1 40.0
	kdsic2_1 0.1
	kasic5_1 10.0
	kdsic5_1 0.1
	Jswi_1 0.1
	ksmcm_1 1.0
	ksmcm_3 0.01
	kdmcm_1 0.25
	Jmcm_1 0.01
	Jmbf_1 0.01
	kambf_1 0.1
	kimbf_1 0.5
	kimbf_3 0.5
	kspds_1 0.01
	kspds_2 0.006
	kdpds_1 0.01
	kdpds_2 2.0
	ksesp_1 0.001
	kdesp_1 0.004
	lapds_1 500.0
	ldpds_1 1.0
	kspolo_1 0.05
	kspolo_2 0.001
	kdpolo_1 0.05
	kdpolo_2 0.5
	Jpolo_1 0.1
	kapolo_2 1.0
	kipolo_1 0.1
	kp_1 2.0
	lanet_1 500.0
	ldnet_1 1.0
	kimp_1 1.0
	Jtem1_1 0.005
	katem_2 0.6
	kitem_1 20.0
	kitem_2 1.0
	kitem_3 0.1
	Jcdc15_1 1.0
	kac15_1 0.03
	kac15_2 0.5
	kic15_1 0.03
	kic15_2 0.2
	lamen_1 100.0
	ldmen_1 0.1
	Cdc14T_1 0.5
	Swi5T_1 1.0
	kimbf_2 0
	kapolo_1 0
	katem_1 0
	Clb2nd_1 0
	Net1p 7.8286e+21 #original 0.013mol/L
end parameters
begin molecule types
	Trim5()
	MEN()
	Cln()
	Net1dep()
	Cdc14n()
	Net1pp()
	Cdc15()
	Swi5()
	Tem1()
	Trim2()
	Pds1T()
	RENTp()
	Clb5T()
	Esp1b()
	Polo()
	Clb2T()
	Cdh1()
	Esp1T()
	Sic1T()
	PoloT()
	MBF()
	Cdc20()
	RENT()
	Mcm()
end molecule types
begin seed species
	Clb2T() 6.016622354e+23 # 0.999107mol/L * 6.022e23/mol *1.0L #Clb2T #Clb2T_1
	Clb5T() 1.216305494e+23 #original 0.201977mol/L #Clb5T #Clb5T_1
	Cln() 2.4563738e+22 #original 0.04079mol/L #Cln #Cln_1
	Sic1T() 1.0135026000000001e+21 #original 0.001683mol/L #Sic1T #Sic1T_1
	Trim2() 8.731899999999999e+20 #original 0.00145mol/L #Trim2 #Trim2_1
	Mcm() 6.0023863460000006e+23 #original 0.996743mol/L #Mcm #Mcm_1
	MBF() 1.1905494000000002e+21 #original 0.001977mol/L #MBF #MBF_1
	Pds1T() 3.625105494e+23 #original 0.601977mol/L #Pds1T #Pds1T_1
	Esp1T() 1.5055e+23 #original 0.25mol/L #Esp1T #Esp1T_1
	PoloT() 6.022e+23 #original 1.0mol/L #PoloT #PoloT_1
	Polo() 6.022e+23 #original 1.0mol/L #Polo #Polo_1
	Net1dep() 7.16618e+21 #original 0.0119mol/L #Net1dep #Net1dep_1
	Net1pp() 7.16618e+21 #original 0.0119mol/L #Net1pp #Net1pp_1
	RENT() 2.908626e+23 #original 0.483mol/L #RENT #RENT_1
	RENTp() 8.430800000000001e+21 #original 0.014mol/L #RENTp #RENTp_1
	Cdc14n() 1.2887080000000001e+21 #original 0.00214mol/L #Cdc14n #Cdc14n_1
	Tem1() 6.022e+23 #original 1.0mol/L #Tem1 #Tem1_1
	Cdc15() 5.618526000000001e+23 #original 0.933mol/L #Cdc15 #Cdc15_1
	Esp1b() 1.4968885400000002e+23 #original 0.24857mol/L #Esp1b #Esp1b_1
end seed species
begin observables
	Species Clb2T Clb2T() #Clb2T
	Species Clb5T Clb5T() #Clb5T
	Species Cln Cln() #Cln
	Species Cdc20 Cdc20() #Cdc20
	Species Cdh1 Cdh1() #Cdh1
	Species Sic1T Sic1T() #Sic1T
	Species Trim2 Trim2() #Trim2
	Species Trim5 Trim5() #Trim5
	Species Swi5 Swi5() #Swi5
	Species Mcm Mcm() #Mcm
	Species MBF MBF() #MBF
	Species Pds1T Pds1T() #Pds1T
	Species Esp1T Esp1T() #Esp1T
	Species PoloT PoloT() #PoloT
	Species Polo Polo() #Polo
	Species Net1dep Net1dep() #Net1dep
	Species Net1pp Net1pp() #Net1pp
	Species RENT RENT() #RENT
	Species RENTp RENTp() #RENTp
	Species Cdc14n Cdc14n() #Cdc14n
	Species Tem1 Tem1() #Tem1
	Species Cdc15 Cdc15() #Cdc15
	Species MEN MEN() #MEN
	Species Esp1b Esp1b() #Esp1b
end observables
begin functions
	Sic1_ar() = Sic1T - Trim2 - Trim5
	Clb2_ar() = Clb2T + Clb2nd_1 - Trim2
	Clb5_ar() = Clb5T - Trim5
	Vdsic_1() = Clb2_ar*kdsic_2 + Clb5_ar*kdsic_1 + Cln*kdsic_4 + kdsic_3
	V6_1() = Cdc20*kdclb5_2 + kdclb5_1
	arRateTrim5_1() = Clb5_ar*Sic1_ar*kasic5_1 - Trim5*(V6_1 + Vdsic_1 + kdsic5_1)
	V2_1() = Cdc20*kdclb2_2 + Cdh1*kdclb2_3 + kdclb2_1
	arRateTrim2_1() = Clb2_ar*Sic1_ar*kasic2_1 - Trim2*(V2_1 + Vdsic_1 + kdsic2_1)
	Esp1_ar() = Esp1T - Esp1b
	arRateMEN_1() = -MEN*ldmen_1 - MEN*(kitem_2/(Esp1_ar*kitem_3 + 1) + kitem_3)/(Jtem1_1 + Tem1) - MEN*(Clb2_ar*kic15_2 + kic15_1)/(Cdc15 + Jcdc15_1) + lamen_1*(Cdc15 - MEN)*(-MEN + Tem1)
	Cdc14c_ar() = Cdc14T_1 - Cdc14n - RENT
	arRateCdc15_1() = -Cdc15*(Clb2_ar*kic15_2 + kic15_1)/(Cdc15 + Jcdc15_1) + (1 - Cdc15)*(Cdc14c_ar*kac15_2 + kac15_1)/(-Cdc15 + Jcdc15_1 + 1)
	Vexp_1() = MEN*kexp_2 + kexp_1
	arRateCdc14n_1() = Cdc14c_ar*kimp_1 - Cdc14n*Vexp_1 - Cdc14n*lanet_1*(Net1T_1 - Net1pp - RENT) + Polo*RENTp*kp_1 + RENT*ldnet_1
	Vp_1() = (Clb2_ar*kp_3 + MEN*kp_4)/(Jnet_1 + Net1dep)
	PP_1() = PPT_1*(Esp1_ar*ki_1*kpp_1 + 1)/(Esp1_ar + ki_1 + 1)
	Vd_1() = (Cdc14n*kd_1 + PP_1*kd_2)/(Jnet_1 + Net1T_1 - Net1dep)
	arRateRENTp_1() = Cdc14n*lanet_1*(Net1T_1 - Net1dep - Net1pp - RENTp) - Polo*RENTp*kp_1 - RENTp*Vd_1 - RENTp*ldnet_1 + Vp_1*(RENT - RENTp)
	arRateNet1dep_1() = -Net1dep*Vp_1 + Vd_1*(Net1T_1 - Net1dep)
	Pds1_ar() = -Esp1b + Pds1T
	arRateEsp1b_1() = Esp1_ar*Pds1_ar*lapds_1 - Esp1b*(Cdc20*kdpds_2 + kdesp_1 + kdpds_1 + ldpds_1)
	arRateMBF_1() = -MBF*(Clb2_ar*kimbf_1 + Clb5_ar*kimbf_3)/(Jmbf_1 + MBF) + kambf_1*(1 - MBF)/(Jmbf_1 - MBF + 1)
	Vaswi_1() = Cdc14c_ar*kaswi_2 + Cdc14n*kaswi_1
	Viswi_1() = Clb2_ar*kiswi_2 + Clb5_ar*kiswi_3 + kiswi_1
	arRateSwi5_1() = -Swi5*Viswi_1/(Jswi_1 + Swi5) + Vaswi_1*(-Swi5 + Swi5T_1)/(Jswi_1 - Swi5 + Swi5T_1)
	Vacdh_1() = Cdc14c_ar*kdcdh_2 + Cdc14n*kdcdh_1
	Vicdh_1() = Clb2_ar*kpcdh_2 + Clb5_ar*kpcdh_3 + kpcdh_1
	arRateCdh1_1() = -Cdh1*Vicdh_1/(Cdh1 + Jcdh_1) + Vacdh_1*(1 - Cdh1)/(-Cdh1 + Jcdh_1 + 1)
	arRateTem1_1() = -Tem1*(kitem_2/(Esp1_ar*kitem_1 + 1) + kitem_3)/(Jtem1_1 + Tem1) + (1 - Tem1)*(Polo*katem_2 + katem_1)/(Jtem1_1 - Tem1 + 1)
	arRateNet1pp_1() = -Net1pp*Vd_1 + Polo*kp_1*(Net1T_1 - Net1dep - Net1pp)
	arRatePolo_1() = -Polo*kipolo_1/(Jpolo_1 + Polo) - Polo*(Cdh1*kdpolo_2 + kdpolo_1) + (-Polo + PoloT)*(Clb2_ar*kapolo_2 + kapolo_1)/(Jpolo_1 - Polo + PoloT)
	arRateMcm_1() = -Mcm*kdmcm_1/(Jmcm_1 + Mcm) + (1 - Mcm)*(Clb2_ar*ksmcm_1 + ksmcm_3)/(Jmcm_1 - Mcm + 1)
	arRateSic1T_1() = -Sic1T*Vdsic_1 + Swi5*kssic_1 + kssic_2
	arRateClb5T_1() = -Clb5T*V6_1 + MBF*ksclb5_1 + ksclb5_2
	arRateClb2T_1() = -Clb2T*V2_1 + Mcm*ksclb2_2 + ksclb2_1
	arRateRENT_1() = Cdc14n*lanet_1*(Net1T_1 - Net1pp - RENT) - Polo*RENTp*kp_1 - RENT*ldnet_1
	arRatePoloT_1() = Mcm*kspolo_1 - PoloT*(Cdh1*kdpolo_2 + kdpolo_1) + kspolo_2
	arRateEsp1T_1() = -Esp1T*kdesp_1 + ksesp_1
	arRatePds1T_1() = MBF*kspds_1 - Pds1T*(Cdc20*kdpds_2 + kdpds_1) + kspds_2
	arRateCdc20_1() = -Cdc20*(Cdh1*kd20_2 + kd20_1) + Mcm*ks20_1 + ks20_2
	arRateCln_1() = -Cln*kdcln_1 + MBF*kscln_1 + kscln_2
	Net1_ar() = Net1T_1 - Net1p - Net1pp - RENT
end functions
begin reaction rules
	0  -> Clb2T() arRateClb2T_1 #rateLaw
	0  -> Clb5T() arRateClb5T_1 #rateLaw
	0  -> Cln() arRateCln_1 #rateLaw
	0  -> Cdc20() arRateCdc20_1 #rateLaw
	0  -> Cdh1() arRateCdh1_1 #rateLaw
	0  -> Sic1T() arRateSic1T_1 #rateLaw
	0  -> Trim2() arRateTrim2_1 #rateLaw
	0  -> Trim5() arRateTrim5_1 #rateLaw
	0  -> Swi5() arRateSwi5_1 #rateLaw
	0  -> Mcm() arRateMcm_1 #rateLaw
	0  -> MBF() arRateMBF_1 #rateLaw
	0  -> Pds1T() arRatePds1T_1 #rateLaw
	0  -> Esp1T() arRateEsp1T_1 #rateLaw
	0  -> Esp1b() arRateEsp1b_1 #rateLaw
	0  -> PoloT() arRatePoloT_1 #rateLaw
	0  -> Polo() arRatePolo_1 #rateLaw
	0  -> Net1dep() arRateNet1dep_1 #rateLaw
	0  -> Net1pp() arRateNet1pp_1 #rateLaw
	0  -> RENT() arRateRENT_1 #rateLaw
	0  -> RENTp() arRateRENTp_1 #rateLaw
	0  -> Cdc14n() arRateCdc14n_1 #rateLaw
	0  -> Tem1() arRateTem1_1 #rateLaw
	0  -> Cdc15() arRateCdc15_1 #rateLaw
	0  -> MEN() arRateMEN_1 #rateLaw
end reaction rules
end model
