<?xml version="1.0" encoding="UTF-8"?>
<!-- Created by BioNetGen 2.6.0  -->
<sbml xmlns="http://www.sbml.org/sbml/level3" level="3" version="1">
  <model id="bmd0000000324_flat">
    <ListOfParameters>
      <Parameter id="V2" type="Constant" value="15" expr="15.0"/>
      <Parameter id="V3" type="Constant" value="10" expr="10.0"/>
      <Parameter id="V4" type="Constant" value="10" expr="10.0"/>
      <Parameter id="lambdaN_bar" type="Constant" value="0.1" expr="0.1"/>
      <Parameter id="lambdaM_bar" type="Constant" value="1" expr="1.0"/>
      <Parameter id="Iapp" type="Constant" value="50" expr="50.0"/>
      <Parameter id="gL" type="Constant" value="2" expr="2.0"/>
      <Parameter id="VL" type="Constant" value="-50" expr="-50.0"/>
      <Parameter id="gCa" type="Constant" value="4" expr="4.0"/>
      <Parameter id="VCa" type="Constant" value="100" expr="100.0"/>
      <Parameter id="gK" type="Constant" value="8" expr="8.0"/>
      <Parameter id="VK" type="Constant" value="-70" expr="-70.0"/>
      <Parameter id="C" type="Constant" value="20" expr="20.0"/>
      <Parameter id="V1" type="Constant" value="0" expr="0"/>
      <Parameter id="_InitialConc1" type="Constant" value="6.1441746e-6" expr="(1+tanh(((-50.0-10.0)/10.0)))/2"/>
      <Parameter id="_InitialConc2" type="Constant" value="0.0012710163" expr="(1+tanh(((-50.0-0)/15.0)))/2"/>
    </ListOfParameters>
    <ListOfMoleculeTypes>
      <MoleculeType id="M"/>
      <MoleculeType id="N"/>
      <MoleculeType id="V"/>
    </ListOfMoleculeTypes>
    <ListOfCompartments>
      <compartment id="musclefibre" spatialDimensions="3" size="1.0"/>
    </ListOfCompartments>
    <ListOfSpecies>
      <Species id="S1"  concentration="-50.0" name="@musclefibre::V()" compartment="musclefibre">
        <ListOfMolecules>
          <Molecule id="S1_M1" name="V" compartment="musclefibre"/>
        </ListOfMolecules>
      </Species>
      <Species id="S2"  concentration="_InitialConc1" name="@musclefibre::N()" compartment="musclefibre">
        <ListOfMolecules>
          <Molecule id="S2_M1" name="N" compartment="musclefibre"/>
        </ListOfMolecules>
      </Species>
      <Species id="S3"  concentration="_InitialConc2" name="@musclefibre::M()" compartment="musclefibre">
        <ListOfMolecules>
          <Molecule id="S3_M1" name="M" compartment="musclefibre"/>
        </ListOfMolecules>
      </Species>
    </ListOfSpecies>
    <ListOfReactionRules>
      <ReactionRule id="RR1" name="_R1" symmetry_factor="1">
        <ListOfReactantPatterns>
        </ListOfReactantPatterns>
        <ListOfProductPatterns>
          <ProductPattern id="RR1_PP1">
            <ListOfMolecules>
              <Molecule id="RR1_PP1_M1" name="V" compartment="musclefibre"/>
            </ListOfMolecules>
          </ProductPattern>
        </ListOfProductPatterns>
        <RateLaw id="RR1_RateLaw" type="Function" name="arRateV" totalrate="0">
          <ListOfArguments>
          </ListOfArguments>
        </RateLaw>
        <Map>
        </Map>
        <ListOfOperations>
          <Add id="RR1_PP1_M1"/>
        </ListOfOperations>
      </ReactionRule>
      <ReactionRule id="RR2" name="_R2" symmetry_factor="1">
        <ListOfReactantPatterns>
        </ListOfReactantPatterns>
        <ListOfProductPatterns>
          <ProductPattern id="RR2_PP1">
            <ListOfMolecules>
              <Molecule id="RR2_PP1_M1" name="N" compartment="musclefibre"/>
            </ListOfMolecules>
          </ProductPattern>
        </ListOfProductPatterns>
        <RateLaw id="RR2_RateLaw" type="Function" name="arRateN" totalrate="0">
          <ListOfArguments>
          </ListOfArguments>
        </RateLaw>
        <Map>
        </Map>
        <ListOfOperations>
          <Add id="RR2_PP1_M1"/>
        </ListOfOperations>
      </ReactionRule>
      <ReactionRule id="RR3" name="_R3" symmetry_factor="1">
        <ListOfReactantPatterns>
        </ListOfReactantPatterns>
        <ListOfProductPatterns>
          <ProductPattern id="RR3_PP1">
            <ListOfMolecules>
              <Molecule id="RR3_PP1_M1" name="M" compartment="musclefibre"/>
            </ListOfMolecules>
          </ProductPattern>
        </ListOfProductPatterns>
        <RateLaw id="RR3_RateLaw" type="Function" name="arRateM" totalrate="0">
          <ListOfArguments>
          </ListOfArguments>
        </RateLaw>
        <Map>
        </Map>
        <ListOfOperations>
          <Add id="RR3_PP1_M1"/>
        </ListOfOperations>
      </ReactionRule>
    </ListOfReactionRules>
    <ListOfObservables>
      <Observable id="O1" name="V" type="Species">
        <ListOfPatterns>
          <Pattern id="O1_P1" matchOnce="1">
            <ListOfMolecules>
              <Molecule id="O1_P1_M1" name="V"/>
            </ListOfMolecules>
          </Pattern>
        </ListOfPatterns>
      </Observable>
      <Observable id="O2" name="N" type="Species">
        <ListOfPatterns>
          <Pattern id="O2_P1" matchOnce="1">
            <ListOfMolecules>
              <Molecule id="O2_P1_M1" name="N"/>
            </ListOfMolecules>
          </Pattern>
        </ListOfPatterns>
      </Observable>
      <Observable id="O3" name="M" type="Species">
        <ListOfPatterns>
          <Pattern id="O3_P1" matchOnce="1">
            <ListOfMolecules>
              <Molecule id="O3_P1_M1" name="M"/>
            </ListOfMolecules>
          </Pattern>
        </ListOfPatterns>
      </Observable>
    </ListOfObservables>
    <ListOfFunctions>
      <Function id="lambdaM">
        <ListOfReferences>
          <Reference name="V1" type="Constant"/>
          <Reference name="V2" type="Constant"/>
          <Reference name="lambdaM_bar" type="Constant"/>
          <Reference name="V" type="Observable"/>
        </ListOfReferences>
        <Expression> lambdaM_bar*cosh(((V-V1)/(2*V2))) </Expression>
      </Function>
      <Function id="Minf">
        <ListOfReferences>
          <Reference name="V1" type="Constant"/>
          <Reference name="V2" type="Constant"/>
          <Reference name="V" type="Observable"/>
        </ListOfReferences>
        <Expression> (tanh(((V-V1)/V2))/2)+(1/2) </Expression>
      </Function>
      <Function id="arRateM">
        <ListOfReferences>
          <Reference name="Minf" type="Function"/>
          <Reference name="lambdaM" type="Function"/>
          <Reference name="M" type="Observable"/>
        </ListOfReferences>
        <Expression> lambdaM*((-M)+Minf) </Expression>
      </Function>
      <Function id="Ninf">
        <ListOfReferences>
          <Reference name="V3" type="Constant"/>
          <Reference name="V4" type="Constant"/>
          <Reference name="V" type="Observable"/>
        </ListOfReferences>
        <Expression> (tanh(((V-V3)/V4))/2)+(1/2) </Expression>
      </Function>
      <Function id="lambdaN">
        <ListOfReferences>
          <Reference name="V3" type="Constant"/>
          <Reference name="V4" type="Constant"/>
          <Reference name="lambdaN_bar" type="Constant"/>
          <Reference name="V" type="Observable"/>
        </ListOfReferences>
        <Expression> lambdaN_bar*cosh(((V-V3)/(2*V4))) </Expression>
      </Function>
      <Function id="arRateN">
        <ListOfReferences>
          <Reference name="Ninf" type="Function"/>
          <Reference name="lambdaN" type="Function"/>
          <Reference name="N" type="Observable"/>
        </ListOfReferences>
        <Expression> lambdaN*((-N)+Ninf) </Expression>
      </Function>
      <Function id="arRateV">
        <ListOfReferences>
          <Reference name="C" type="Constant"/>
          <Reference name="Iapp" type="Constant"/>
          <Reference name="VCa" type="Constant"/>
          <Reference name="VK" type="Constant"/>
          <Reference name="VL" type="Constant"/>
          <Reference name="gCa" type="Constant"/>
          <Reference name="gK" type="Constant"/>
          <Reference name="gL" type="Constant"/>
          <Reference name="M" type="Observable"/>
          <Reference name="N" type="Observable"/>
          <Reference name="V" type="Observable"/>
        </ListOfReferences>
        <Expression> (((Iapp-((M*gCa)*(V-VCa)))-((N*gK)*(V-VK)))-(gL*(V-VL)))/C </Expression>
      </Function>
    </ListOfFunctions>
  </model>
</sbml>
